NAME = "English"
LANGUAGE = {
    mustProvideString = "Must Provide a String",
    use = "Use",
    read = "Read",
    desc = "Description",
    modules = "Modules",
    faction = "Faction",
    factions = "Factions",
    none = "None",
    other = "Other",
    class = "Class",
    leave = "Leave",
    name = "Name",
    model = "Model",
    skin = "Skin",
    bodygroups = "Bodygroups",
    flag = "Flag",
    group = "Group",
    lilia = "Lilia",
    search = "Search...",
    select = "Select",
    storagelockDesc = "Lock or unlock the storage container you're looking at. Provide a password to set the lock, or run without a password to remove it.",
    trunkOpenDesc = "Open the vehicle trunk you're looking at to access its storage inventory.",
    ok = "ok",
    renameSitroomTitle = "Rename Administration Room",
    teleport = "Teleport",
    reposition = "Reposition",
    rename = "Rename",
    create = "Create",
    delete = "Delete",
    give = "Give",
    remove = "Remove",
    noAccess = "No Access",
    mecloseDesc = "Displays a close-range emote action.",
    actionsDesc = "Displays a general action.",
    mefarDesc = "Displays a far-range emote action.",
    itcloseDesc = "Displays an in-character message at close range.",
    itfarDesc = "Displays an in-character message at far range.",
    coinflipDesc = "Flips a coin and displays the result.",
    icDesc = "Says something in-character.",
    sbOptions = "Scoreboard Options.",
    quickSettings = "Quick Settings",
    meDesc = "Performs an emote action.",
    globalMeDesc = "Performs an globally seen emote action.",
    itDesc = "Displays an in-character descriptive message.",
    wDesc = "Whispers a message.",
    yDesc = "Yells a message.",
    manageSitrooms = "Manage Administration Rooms",
    manageSitroomsDesc = "Manage administration rooms on the current map: view existing administration rooms, teleport to them, rename them, or reposition them.",
    looc = "LOOC",
    loocDesc = "Out-of-character chat with a cooldown.",
    adminchatDesc = "Sends a message to admin chat.",
    ooc = "OOC",
    oocDesc = "Out-of-character chat for general discussion.",
    rollDesc = "Rolls a dice and displays the result.",
    pmDesc = "Sends a private message to a specified player.",
    eventlocalDesc = "Sends a local event message (admin only).",
    eventDesc = "Sends an event message to everyone (admin only).",
    coinflipFormat = "%s flipped a coin and it landed on %s.",
    icFormat = '%s says "%s"',
    whisperFormat = '%s whispers "%s"',
    yellFormat = '%s yells "%s"',
    rollFormat = "%s has rolled %s.",
    pmFormat = "[PM] %s: %s.",
    chatFormat = '%s: "%s"',
    emoteFormat = "**%s %s",
    mePossessiveFormat = "**%s's %s",
    setInventorySizeDesc = "Force set a characters's custom inventory size",
    updateInventorySizeDesc = "Update a player's inventory size based on default settings",
    setInventorySizeOverrideDesc = "Set a character's inventory size and save override",
    targetNotFound = "Target not found",
    invalidWidthHeight = "Invalid width or height",
    widthHeightOutOfRange = "Width must be %s%s and height must be %s%s",
    setInventorySizeNotify = "Set %s's inventory size to %sx%s",
    noCharacterLoaded = "Player has no character loaded",
    noInventory = "Player has no inventory",
    inventoryAlreadySize = "%s's inventory is already %sx%s",
    updatedInventorySize = "Updated %s's inventory size to %sx%s",
    mesDesc = "Displays an action in possessive form.",
    mefarfarDesc = "Displays an exaggerated far-range action.",
    help = "HELP",
    helpDesc = "Sends a help message to staff.",
    unnamed = "Unnamed",
    descMinLen = "Description must be at least %s characters long.",
    isDefault = "Is Default",
    yes = "Yes",
    no = "No",
    keyBind = " (%s)",
    baseHealth = "Base Health",
    vendorYourItems = "Your Items",
    vendorItemsTitle = "Vendor Items",
    vendorSellScale = "Sell Scale",
    vendorItemCount = "Item Count",
    vendorNoItems = "No Items",
    vendorOneItem = "1 Item",
    vendorItems = "%s Items",
    vendorItemQuantity = "%sx ",
    vendorDefaultName = "Jane Doe",
    vendorEditorButton = "Edit Vendor",
    vendorShowAll = "Show All",
    vendorFree = "Free",
    vendorSellAction = "Sell (%s)",
    vendorBuyAction = "Buy (%s)",
    vendorEditor = "Vendor Editor",
    vendorEditorWelcomeMessage = "Welcome Message",
    vendorMessageFormat = "%s: %s",
    vendorUseMoney = "Use Money",
    vendorFaction = "Faction Access",
    mode = "Trade Mode",
    moneyTaken = "You picked up %s.",
    giveMoney = "Give Money",
    enterValue = "Enter value...",
    enterAmount = "Enter amount...",
    givingItemTo = "Giving %s to %s",
    givingYouItem = "%s is giving you a %s",
    notEnoughMoney = "You don't have enough money",
    forbiddenActionStorage = "You can't perform this action from storage.",
    playerCharBelonging = "This item belongs to another one of your characters.",
    cantDropBagHasEquipped = "You can't drop a bag with equipped items inside.",
    tooLongMessage = "Your message is too long and has not been sent.",
    criticalCondition = "Critical Condition",
    seriousInjury = "Serious Injury",
    moderateInjury = "Moderate Injury",
    minorInjury = "Minor Injury",
    healthyStatus = "Healthy",
    switchTo64Bit = "We recommend the use of the x86-64 Garry's Mod Branch on your installation, consider swapping as soon as possible.",
    buyOnlynSell = "Buy and Sell",
    buyOnly = "Buy Only",
    sellOnly = "Sell Only",
    price = "Price",
    item = "Item",
    inventory = "Inventory",
    line = "Line",
    size = "Size",
    prop = "Prop",
    entity = "Entity",
    creator = "Creator",
    nickname = "Nickname",
    steamName = "Steam Name",
    health = "Health",
    armor = "Armor",
    usergroup = "Usergroup",
    origin = "origin",
    angles = "angles",
    vendorPriceReq = "Set the item's price.",
    stock = "Stock",
    disable = "Disable Stock",
    edit = "Edit Max Stock",
    vendorStockReq = "Set max stock quantity.",
    vendorEditCurStock = "Edit Current Stock",
    vendorStockCurReq = "Set current stock quantity.",
    unassigned = "Unassigned",
    staffOnline = "Staff Online: %s",
    playersOnline = "Players Online: %s",
    staffOnDuty = "Staff on Duty: %s",
    selectFaction = "Select a faction",
    selectModel = "Select a model",
    selectPrompt = "Select %s",
    noDesc = "No Description",
    requiredFieldError = "The field '%s' is required and cannot be empty.",
    baseArmor = "Base Armor",
    weapons = "Weapons",
    properties = "Properties",
    tools = "Tools",
    modelScale = "Model Scale",
    runSpeed = "Run Speed",
    walkSpeed = "Walk Speed",
    jumpPower = "Jump Power",
    bloodColor = "Blood Color",
    bloodNo = "No blood",
    bloodRed = "Red blood",
    bloodYellow = "Yellow blood",
    bloodGreenRed = "Green-red blood",
    bloodSparks = "Sparks",
    bloodAntlion = "Antlion yellow blood",
    bloodZombie = "Zombie green-red blood",
    bloodAntlionBright = "Antlion worker bright green blood",
    requirements = "Requirements",
    barProgress = "%s / %s",
    alreadyInClass = "You are already in this class",
    joinClass = "Join Class",
    classRequirementsNotMet = "You do not meet the class requirements or this class isn't default.",
    discord = "Discord",
    cannotDeleteChar = "You cannot delete this character!",
    alreadyUsingCharacter = "You are already using this character",
    permaKilledCharacter = "This character was perma killed",
    alreadyHaveGrenade = "You already have this type of grenade.",
    invalidFaction = "The specified faction is not valid.",
    submit = "Submit",
    subOption = "Sub Option",
    apply = "Apply",
    cfgSet = '%s has set "%s" to %s.',
    invalid = "You have provided an invalid %s",
    fixInventoryError = "A server error occurred while loading your inventories. Check server log for details.",
    unknown = "Unknown",
    error = "ERROR",
    na = "N/A",
    wakingUp = "Waking Up",
    unknownError = "An unknown error has occurred",
    illegalAccess = "You are not whitelisted for this faction.",
    settings = "Settings",
    misc = "Miscellaneous",
    flags = "Flags",
    searchAddons = "Search addons...",
    searchModules = "Search Modules...",
    searchEntities = "Search Entities...",
    searchOptions = "Search Options...",
    commands = "Commands",
    accessTo = "Access to %s",
    globalAccess = "Global",
    meters = "%s Meters",
    factionRoster = "Faction Roster",
    noMembers = "No members to display.",
    classes = "Classes",
    searchFlags = "Search Flags",
    searchCommands = "Search Commands",
    lookToUseAt = "You need to be looking at someone to use '@'",
    itemNoExist = "Sorry, the item that you requested does not exist.",
    cmdNoExist = "Sorry, that command does not exist.",
    plyNoExist = "Sorry, a matching player could not be found.",
    itemCreated = "Item successfully created.",
    inv = "Inventory",
    take = "Take",
    invalidArg = "Invalid argument.",
    noFit = "This item can not fit in your inventory.",
    useTip = "Uses the item.",
    equipTip = "Equips the item.",
    rotateTip = "Rotates the item.",
    openTip = "Opens the container.",
    bagNoInventory = "This bag has no inventory.",
    bagOnGround = "You cannot open a bag that's on the ground.",
    moneyLimitReached = "You've reached your money limit of %s%s. %s%s has been dropped.",
    playtimeYour = "Your playtime is %s hours, %s minutes, and %s seconds.",
    playtimeError = "Could not retrieve your playtime.",
    playtimeFor = "%s's playtime is %s hours, %s minutes, and %s seconds.",
    daysHoursMinutes = "%sd %sh %sm",
    specifyPlayer = "Please specify a player.",
    adminStickGetPlayTimeName = "Get Player Playtime",
    staffPermissionDenied = "You do not have permission to use this command.",
    staffRestrictedCommand = "You must be on duty or have bypass permissions to use this command.",
    cleardecalsDesc = "Clears all decals (blood, bullet holes, etc.) for every player.",
    blindCommandHelp = "Blinds the players.",
    samBlindedTargets = "{A} Blinded {T}",
    unblindCommandHelp = "Unblinds the players.",
    samUnblindedTargets = "{A} Un-Blinded {T}",
    playtimeDesc = "Displays your total playtime on the server.",
    plygetplaytimeDesc = "Shows the total playtime of the specified character.",
    workshopAddons = "Addons",
    addonSize = "This addon is %s. It takes up %s of the downloaded and mounted addons via Lilia",
    itemOnGround = "Your item has been placed on the ground.",
    fixpac_success = "PAC3 has been restarted and caches cleared.",
    pacenable_success = "PAC3 has been enabled.",
    pacdisable_message = "PAC3 has been disabled.",
    pacFixCommandDesc = "Clears PAC3 caches and restarts PAC3 to fix any outfit issues.",
    pacEnableCommandDesc = "Enables PAC3 (Player Appearance Customizer).",
    pacDisableCommandDesc = "Disables PAC3 (Player Appearance Customizer).",
    vguiCleanupCommandDesc = "Removes leftover panels like crashed DFrames.",
    enteringVehicle = "Entering Vehicle...",
    carOccupiedNotice = "Someone is entering this car!",
    charKick = "%s kicked character %s.",
    charBan = "%s banned the character %s.",
    charWipe = "%s wiped the character %s from the database.",
    charUnBan = "%s has unbanned the character %s.",
    charNotBanned = "This character isn't banned!",
    limitFaction = "This faction is full. Try again later.",
    salary = "You have received %s from your salary.",
    locking = "Locking this entity...",
    unlocking = "Unlocking this entity...",
    notNow = "You are not allowed to do this right now.",
    areYouSure = "Are you sure?",
    descChangedTarget = "%s has changed %s's character description.",
    descChanged = "Character description has been changed.",
    staffDescUpdated = "Staff character description updated!",
    staffdiscordDesc = "Sets your staff Discord username.",
    disconnect = "Disconnect",
    noPerm = "You are not allowed to do this.",
    chgName = "Change Name",
    chgNameDesc = "Enter the character's new name below.",
    chgDescTitle = "Change %s's Description",
    whitelist = "%s has whitelisted %s for the %s faction.",
    unwhitelist = "%s has unwhitelisted %s from the %s faction.",
    load = "Load",
    equip = "Equip",
    unequip = "Unequip",
    rotate = "Rotate",
    view = "View",
    returnText = "Return",
    privilegeListRefreshed = "Privilege list refreshed.",
    copied = "Copied to clipboard.",
    allPrivilegeInfo = "All privilege information copied.",
    privilegeIdCopied = "Privilege ID copied.",
    bagIntoBagError = "A bag cannot be placed into another bag.",
    nestedItemTransferError = "An item in the bag cannot be transferred.",
    oocDelay = "You must wait %s more second(s) before using OOC again.",
    loocDelay = "You must wait %s more second(s) before using LOOC again.",
    becomeClassFail = "Failed to become %s.",
    becomeClass = "You have become %s.",
    characters = "Characters",
    flagGive = "%s has given %s '%s' flags.",
    flagGiveDesc = "Give the following flags to the player.",
    flagTake = "%s has taken '%s' flags from %s.",
    flagTakeDesc = "Remove the following flags from the player.",
    flagSet = "%s has set %s's flags to '%s'.",
    playerFlagGive = "%s has given %s '%s' player flags.",
    playerFlagGiveDesc = "Give the following player flags to the player.",
    playerFlagTake = "%s has taken '%s' player flags from %s.",
    playerFlagTakeDesc = "Remove the following player flags from the player.",
    playerFlagSet = "%s has set %s's player flags to '%s'.",
    charFlagsTitle = "Character Flags",
    playerFlagsTitle = "Player Flags",
    modifyCharFlags = "Modify Character Flags",
    modifyPlayerFlags = "Modify Player Flags",
    giveAllCharFlags = "Give All Character Flags",
    takeAllCharFlags = "Take All Character Flags",
    listCharFlags = "List Character Flags",
    currentCharFlags = "Current Character Flags",
    giveAllPlayerFlags = "Give All Player Flags",
    takeAllPlayerFlags = "Take All Player Flags",
    listPlayerFlags = "List Player Flags",
    currentPlayerFlags = "Current Player Flags",
    spawnDeleted = "You have removed %s spawn point(s).",
    spawnAdded = "You added spawn for %s.",
    attribSet = "You set %s's %s to %s.",
    attribUpdate = "You added %s's %s by %s.",
    door = "Door",
    doorUnconfigured = "Unconfigured Door",
    doorTitle = "Unowned Door",
    doorTitleOwned = "Owned Door",
    doorIsNotOwnable = "This door cannot be owned.",
    doorIsOwnable = "You can purchase this door by pressing F2.",
    doorMadeUnownable = "This door is now unownable.",
    doorMadeOwnable = "This door is now ownable.",
    doorNotAllowedToOwn = "You are not allowed to own this door.",
    doorSetDisabled = "This door is now disabled.",
    doorSetNotDisabled = "This door is no longer disabled.",
    doorSetHidden = "This door is now hidden.",
    doorSetNotHidden = "This door is no longer hidden.",
    doorOwnedBy = "This door is owned by %s.",
    doorSetFaction = "This door now belongs to the '%s' faction.",
    doorRemoveFaction = "This door no longer belongs to any faction.",
    doorRemoveFactionSpecific = "This door no longer belongs to the '%s' faction.",
    doorPurchased = "You have purchased this door for %s.",
    doorSold = "You have sold this door for %s.",
    doorSetPrice = "You have set this door's price to %s.",
    doorNotValid = "You are not looking at a valid door.",
    doorNotOwner = "You do not own this door.",
    doorCanNotAfford = "You cannot afford this door.",
    doorToggleLocked = "The door has been %s.",
    invalidClass = "The specified class is not valid.",
    doorDisabled = "This door is disabled.",
    doorDisableAll = "All doors have been disabled.",
    doorsAlwaysDisabledDesc = "When enabled, all doors will be disabled by default when the server loads.",
    doorSetClass = "This door now belongs to the '%s' class.",
    doorRemoveClass = "This door no longer belongs to any class.",
    doorRemoveClassSpecific = "The '%s' class has been removed from this door.",
    doorClassNotAssigned = "The '%s' class is not assigned to this door.",
    doorremoveclassDesc = "Remove a class (job) restriction from a door.",
    adminStickDoorRemoveClassName = "Remove Door Class",
    doorsSaved = "Saved Doors!",
    dataSaved = "Data saved successfully.",
    doorInfoProperty = "Property",
    doorInfoValue = "Value",
    doorInfoDisabled = "Disabled",
    doorInfoNoSell = "No Sell",
    doorInfoHidden = "Hidden",
    locked = "Locked",
    unlocked = "unlocked",
    ownable = "ownable",
    unownable = "unownable",
    hidden = "hidden",
    visible = "visible",
    blocked = "blocked",
    unblocked = "unblocked",
    enabled = "Enabled",
    disabled = "Disabled",
    doorAccess = "Access",
    tenant = "Tenant",
    guest = "Guest",
    doorSell = "Sell",
    doorAddFaction = "Add Faction to Door",
    doorRemoveFactionAdmin = "Remove Faction from Door",
    doorNoFactions = "No factions assigned to this door",
    all = "All",
    recognizeInWhisperRange = "Recognize in Whisper Range",
    recognizeInTalkRange = "Recognize in Talk Range",
    recognizeInYellRange = "Recognize in Yell Range",
    recognizeOption = "Recognize",
    recogFakeNamePrompt = "Enter fake name",
    noRecog = "You do not recognize this person.",
    recognitionGiven = "Gave Recognition to %s people.",
    someone = "Someone",
    options = "Options",
    optionsTitle = "%s Options",
    tableListTitle = "Table List",
    typeFieldPrompt = "Type %s",
    copyRow = "Copy Row",
    viewEntry = "View Decoded Entry",
    viewDecodedTable = "View Decoded Table",
    copySteamID = "Copy Steam ID",
    copyName = "Copy Name",
    copyLogMessage = "Copy Log Message",
    copy = "Copy",
    giveToCharacter = "Give To Character...",
    giveTo = "Give to",
    characterSteamIDFormat = "[%s] [%s]",
    spawnItem = "Spawn item",
    spawnItemTitle = "Spawn %s",
    spawnUndoText = "Undone %s",
    spawnUndoName = "Item (%s)",
    inventoryItems = "Inventory Items",
    unsorted = "Unsorted",
    noItemSpawnerPermission = "You don't have permission to use this.",
    keybinds = "Keybinds",
    itemUseOnTarget = "Use on Target",
    placeDownEntity = "Place",
    invalidTargetNeedLiving = "You must be looking at a valid, living player to use this.",
    ammoLoadAll = "Load All",
    ammoLoadAmount = "Load %s",
    ammoDesc = "Remaining: %s",
    ammoBoxDesc = "A box of ammunition",
    useGrenade = "Use Grenade",
    noRagdollAction = "You cannot do that while ragdolled.",
    sameOutfitCategory = "You are already wearing something in this outfit category.",
    open = "Open",
    outfitTypeEquipAlready = "You are already wearing an item of this type.",
    weaponDoesNotExist = "Weapon '%s' does not exist",
    invalidWeapon = "You cannot drop this weapon while it's equipped.",
    weaponSlotFilled = "You already have a weapon equipped in that slot.",
    invalidDate = "Invalid date",
    invalidInput = "Invalid input",
    secondsAgo = "%s seconds ago",
    minutesAgo = "%s minutes ago",
    hoursAgo = "%s hours ago",
    daysAgo = "%s days ago",
    ago = "ago",
    onlineNow = "Online now",
    weekdaySunday = "Sunday",
    weekdayMonday = "Monday",
    weekdayTuesday = "Tuesday",
    weekdayWednesday = "Wednesday",
    weekdayThursday = "Thursday",
    weekdayFriday = "Friday",
    weekdaySaturday = "Saturday",
    monthJanuary = "January",
    monthFebruary = "February",
    monthMarch = "March",
    monthApril = "April",
    monthMay = "May",
    monthJune = "June",
    monthJuly = "July",
    monthAugust = "August",
    monthSeptember = "September",
    monthOctober = "October",
    monthNovember = "November",
    monthDecember = "December",
    anonymous = "Anonymous",
    resetAllKeybinds = "Reset All Keybinds",
    flagSpawnVehicles = "Gives Access to spawning vehicles.",
    flagSpawnSweps = "Gives Access to spawning SWEPS.",
    flagSpawnSents = "Gives Access to spawning SENTs.",
    flagSpawnEffects = "Gives Access to spawning Effects.",
    flagSpawnRagdolls = "Gives Access to spawning ragdolls.",
    flagSpawnProps = "Gives Access to spawning props.",
    flagSpawnNpcs = "Gives Access to spawning NPCs.",
    flagInviteToYourFaction = "Gives Access to inviting to your faction.",
    flagInviteToYourClass = "Gives Access to inviting to your class.",
    flagPhysgun = "Gives Access to Physgun.",
    flagToolgun = "Gives Access to Toolgun",
    flagPac3 = "Gives Access to PAC3.",
    flagFactionRoster = "Gives Access to manage your faction roster.",
    flagFactionKick = "Gives Access to kick members from your faction roster.",
    classNoInfo = "Class information not found.",
    classWrongTeam = "You are not in the correct team to join this class.",
    classFull = "This class is currently full.",
    pktoggle_true = "You have toggled this character's PK State to True. They will be PK'ed the next time they die!",
    pktoggle_false = "You have toggled this character's PK State to False.",
    storPass = "You've set this storage's password to %s.",
    storPassRmv = "You've removed this storage's password.",
    storPassWrite = "Enter the password.",
    wrongPassword = "You've entered the wrong password.",
    notLookingAtVehicle = "You're not looking at any vehicle!",
    tooFarToOpenTrunk = "You're too far to open the trunk!",
    openingTrunk = "Opening...",
    unauthorizedNetMessage = "Unauthorized use of net message: %s",
    pmsDisabled = "Private Messages are Disabled",
    vendorWelcomeMessage = "Default Vendor Welcome Message",
    vendorNoMoney = "This vendor cannot afford that item.",
    vendorNoStock = "This vendor does not have that item in stock.",
    vendorTradeRestrictedFlag = "You do not have the required permissions to trade this item.",
    vendorYouSoldItem = "You sold %s for %s.",
    notAdminForTicket = "You aren't an admin. Use '@messagehere' to create a ticket.",
    oocBlocked = "The OOC is Globally Blocked!",
    oocBanned = "You have been banned from using OOC!",
    textTooBig = "Text too big!",
    inviteToFaction = "Invite To Faction",
    joinFactionPrompt = "Do you want to join this faction?",
    inviteDeclined = "Invite declined.",
    inviteToClass = "Invite To Class",
    joinClassPrompt = "Do you want to join this class?",
    cantFreezeTarget = "You cannot freeze this!",
    vendorYouBoughtItem = "You bought %s for %s.",
    vendorSteamIDWhitelist = "You are not whitelisted via SteamID.",
    vendorUserGroupWhitelist = "You are not whitelisted for this user group.",
    vendorVIPOnly = "This item is available for VIPs only.",
    vendorNotWhitelisted = "You are not whitelisted to trade this item.",
    vendorError = "An error occurred during the transaction.",
    vendorDoesNotHaveItem = "The vendor does not have this item.",
    vendorPlayerDoesNotHaveItem = "You do not have this item.",
    vendorNoInventorySpace = "You don't have enough space for this item!",
    vendorRestocked = "The vendor has been restocked.",
    notLookingAtValidVendor = "You are not looking at a valid vendor.",
    vendorAllVendorsRestocked = "All vendors have been restocked. Total vendors restocked: %s.",
    vendorAllMoneyReset = "All vendors' money has been reset to %s. Total vendors updated: %s.",
    vendorMoneyRestocked = "Vendor's money has been restocked to %s.",
    vendorNoMoneyVariable = "This vendor does not have a money variable.",
    vendorInvalidItem = "Invalid item.",
    vendorRarityNameString = "Rarity name must be a string",
    vendorColorMustBeColor = "Color must be a Color",
    vendorPresetNameString = "Preset name must be a string",
    vendorPresetItemsTable = "Preset items must be a table",
    vendorModelString = "Model must be a string",
    vendorScaleNumber = "Scale must be a number",
    vendorAmountNumber = "Amount must be a number",
    canNotAfford = "You cannot afford that item.",
    respawnKey = "Press %s to respawn",
    respawnIn = "You can respawn in %s",
    youHaveDied = "You have died",
    factionStaffName = "Staff on Duty",
    factionStaffDesc = "The Staff",
    cleaningFinished = "You cleaned up %s: %s entities removed.",
    invalidTarget = "Invalid Target!",
    money = "Money",
    playtime = "Playtime",
    noRagdoll = "You don't have a ragdoll to get up from!",
    invCheckSelf = "This isn't meant for checking your own inventory.",
    noBodygroups = "No bodygroups available for this model.",
    mustSpecifyItem = "You must specify an item to give.",
    freezeAllProps = "You have frozen all of %s's Entities.",
    freezeAllPropsCount = "Frozen %s Entities belonging to %s.",
    enterNewDesc = "Enter new description",
    mustSpecifySound = "You must specify a sound to play.",
    waitRespawn = "Wait until you respawn.",
    noDeathPosition = "No death position saved.",
    death = "Death",
    start = "Start",
    logs = "Logs",
    failedRetrieveLogs = "Failed to retrieve logs.",
    searchLogs = "Search logs...",
    message = "Message",
    character = "Character",
    invalidAmount = "Invalid amount.",
    cmdCooldown = "This Command Is In Cooldown!",
    cmdFrozen = "You cannot use this while frozen!",
    cmdDead = "You cannot use this while dead!",
    cmdVehicle = "You cannot use this as you are in a vehicle!",
    cmdNoclip = "You cannot use this while in noclip!",
    blacklistedProp = "Blacklisted Prop!",
    blacklistedVehicle = "Blacklisted Vehicle!",
    noSpawnPropsPerm = "You do not have permission to spawn props.",
    disabledFeature = "This is disabled to avoid issues with Lilia's Core Features",
    noModifyWorldEntities = "You do not have permission to modify world entities.",
    noModifyProperty = "You do not have permission to modify this property.",
    noPickupRestricted = "You do not have permission to pick up restricted entities with the physgun.",
    noPickupVehicles = "You do not have permission to pick up vehicles with the physgun.",
    noPickupPlayer = "You do not have permission to pick up this player with the physgun.",
    noPickupWorld = "You do not have permission to pick up world props with the physgun.",
    noPickupEntity = "You do not have permission to pick up this entity with the physgun.",
    noSpawnVehicles = "You do not have permission to spawn vehicles.",
    noNoclip = "You do not have permission to noclip.",
    noNoclipWhileDead = "You cannot noclip while dead.",
    noSpawnEffects = "You do not have permission to spawn effects.",
    noSpawnNPCs = "You do not have permission to spawn NPCs.",
    noSpawnRagdolls = "You do not have permission to spawn ragdolls.",
    noSpawnSents = "You do not have permission to spawn SENTs.",
    noSpawnSweps = "You do not have permission to spawn SWEPs.",
    noGiveSweps = "You do not have permission to give SWEPs.",
    noPhysgunReload = "You do not have permission to reload the physgun.",
    duplicationSizeLimit = "A model within this duplication exceeds the size limit!",
    toolNotAllowed = "You are not allowed to use the %s tool.",
    toolNoPermission = "You do not have permission to access tool '%s'. Missing: %s",
    onDutyStaffOrFlagT = "On-duty staff or flag 't'",
    useProperty = "use property %s",
    modifyWorldProperty = "modify world property %s",
    modifyProperty = "modify property %s",
    physgunRestrictedEntity = "physgun restricted entity",
    physgunVehicle = "physgun vehicle",
    physgunPlayer = "physgun player",
    physgunWorldProp = "physgun world prop",
    physgunEntity = "physgun entity",
    physgunReload = "physgun reload",
    giveSwep = "give swep",
    removeBlockedEntity = "remove blocked entity",
    removeWorldEntity = "remove world entity",
    noclip = "noclip",
    godmode = "God Mode",
    spectate = "Spectate",
    vehicle = "Vehicle",
    effect = "Effect",
    npc = "NPC",
    ragdoll = "Ragdoll",
    sent = "SENT",
    swep = "SWEP",
    noRemoveBlockedEntities = "You do not have permission to remove blocked entities.",
    noRemoveWorldEntities = "You do not have permission to remove world entities.",
    toolCantUseEntity = "You cannot use %s on this entity.",
    cannotDuplicateEntity = "This entity cannot be duplicated using %s.",
    cannotWeldBall = "You cannot weld this entity with the weld tool.",
    stopSoundForEveryone = "Stop Sound For Everyone",
    categoryServer = "Server",
    mustSuperAdminStopSound = "You need the '%s' privilege to run stopsound globally.",
    commandConsoleOnly = "This command can only be run from the server console.",
    resetInv = "You have cleared %s's inventory!",
    searchingChar = "Searching for character...",
    noAvailableFlags = "No available flags to give.",
    gaveAllFlags = "You gave this player all flags!",
    tookAllFlags = "You took this player's flags!",
    charInvEmpty = "Character Inventory is empty.",
    changedScale = "You changed %s's model scale to %s.",
    changedJump = "You changed %s's jump power to %s.",
    setMoney = "You set %s's money to %s.",
    addMoney = "You gave %s an additional %s. Total: %s",
    moneyTransferSent = "You transferred %s to %s",
    moneyTransferReceived = "You received %s from %s",
    moneyDropped = "You dropped %s on the ground.",
    maxMoneyEntitiesReached = "You have reached the maximum number of money entities (%d). Please wait for them to be picked up or removed.",
    dropMoneyDesc = "Drop money from your character's balance as a physical entity.",
    noMessage = "You must specify a message.",
    needBotAndMessage = "You must specify a bot and a message.",
    botNotFound = "No bot found with the name: %s",
    changeModel = "%s changed %s's model to %s.",
    changeName = "%s changed %s's name to %s.",
    changeSkin = "%s changed %s's skin to %s.",
    changeBodygroups = [[%s changed %s's "%s" bodygroup to %s.]],
    adminStickCheckInventoryName = "Check Inventory",
    adminStickOpenCharListName = "Open CharList",
    doorsellDesc = "Sell a door you own and receive a refund based on the door's price.",
    admindoorsellDesc = "Admin command to sell a door on behalf of its owner and refund the owner.",
    doortogglelockDesc = "Toggle a door's lock state between locked and unlocked.",
    doorbuyDesc = "Purchase a door if it is available and you can afford it.",
    doortoggleownableDesc = "Toggle whether a door can be owned by players.",
    doorresetdataDesc = "Reset door data to default settings.",
    doortoggleenabledDesc = "Toggle door enabled state (active/inactive).",
    doortogglehiddenDesc = "Toggle the hidden state of a door.",
    doorsetpriceDesc = "Set the price for a door.",
    doorsettitleDesc = "Set the title for a door.",
    savedoorsDesc = "Save door data persistently.",
    doorinfoDesc = "Display information about the targeted door.",
    dooraddfactionDesc = "Add a faction restriction to a door, allowing only specific factions to access it.",
    doorremovefactionDesc = "Remove a faction restriction from a door, or clear all restrictions.",
    doorsetclassDesc = "Set a class (job) restriction for a door.",
    togglealldoorsDesc = "Toggle the enabled state for all doors in the map.",
    adminStickDoorSellName = "Sell Door",
    adminStickAdminDoorSellName = "Admin Sell Door",
    adminStickToggleDoorLockName = "Toggle Door Lock",
    buyDoor = "Buy Door",
    adminStickToggleDoorOwnableName = "Toggle Door Ownable",
    adminStickResetDoorDataName = "Reset Door Data",
    adminStickToggleDoorEnabledName = "Toggle Door Enabled",
    adminStickToggleDoorHiddenName = "Toggle Door Hidden",
    adminStickSetDoorPriceName = "Set Door Price",
    adminStickSetDoorTitleName = "Set Door Title",
    adminStickSaveDoorsName = "Save Doors",
    adminStickDoorInfoName = "Get Door Information",
    doorManagement = "Door Management",
    doorActions = "Door Actions",
    doorSettings = "Door Settings",
    doorMaintenance = "Door Maintenance",
    doorInformation = "Door Information",
    adminStickClearInventoryName = "Clear Inventory",
    adminStickKickCharacterName = "Kick Character",
    adminStickCharKillName = "Character Kill (Permakill)",
    adminStickTogglePermakillName = "Toggle Character Killing (Ban)",
    adminStickSubCategoryBans = "Bans",
    adminStickSubCategoryGetInfos = "Get Information",
    adminStickSubCategorySetInfos = "Set Information",
    adminStickSetCharSpeedName = "Set Character Speed",
    adminStickSetCharSkinName = "Set Character Skin",
    adminStickGiveItemName = "Give Item",
    adminStickSetCharDescName = "Set Character Description",
    adminStickSetCharNameName = "Set Character Name",
    adminStickSetCharScaleName = "Set Character Scale",
    adminStickSetCharJumpName = "Set Character Jump Height",
    adminStickTakeAllFlagsName = "Take All Flags",
    adminStickCheckMoneyName = "Check Money",
    adminStickGetCharFlagsName = "Get Character Flags",
    adminStickGetPlayerFlagsName = "Get Player Flags",
    adminStickFactionWhitelistName = "Faction Whitelist",
    adminStickUnwhitelistName = "Unwhitelist Player",
    adminStickClassWhitelistName = "Class Whitelist",
    adminStickClassUnwhitelistName = "Class Unwhitelist",
    adminStickSetClassName = "Set Class",
    uiBodygroupsFor = "Bodygroups for %s",
    groupID = "Group ID",
    range = "Range",
    characterID = "Character ID",
    playerMoney = "%s has %s",
    modelIs = "The model is: %s",
    noModelFound = "No model found.",
    charModelIs = "Character Model: %s",
    charNameIs = "Character Name: %s",
    charHealthIs = "Character Health: %s/%s",
    charMoneyIs = "Character Money: %s",
    charInventoryIs = "Character Inventory: %s",
    charFlags = "%s  %s",
    playerFlags = "%s  %s",
    infoPrintedConsole = "Character information printed to console.",
    noFlags = "%s has no flags.",
    adminStickGetCharModelName = "Get Character Model",
    adminStickGetCharNameName = "Get Character Name",
    adminStickGetCharHealthName = "Get Character Health",
    adminStickGetCharMoneyName = "Get Character Money",
    adminStickGetCharInventoryName = "Get Character Inventory",
    adminStickGetAllInfosName = "Get All Informations",
    adminStickExecutedCommand = "Executing command: %s",
    sendToSitRoom = "Send To Administration Room",
    setSitroomDesc = "Set Administration Room",
    enterNamePrompt = "Enter Name",
    sitroomTeleport = "You have been teleported to Administration Room: %s.",
    sitroomRenamed = "Administration Room renamed successfully.",
    sitroomRepositioned = "Administration Room repositioned successfully.",
    enterSitroomPrompt = "Enter the name of the Administration Room",
    invalidName = "Invalid name!",
    invalidDescription = "Invalid description",
    nameAlreadyExists = "A character with this name already exists.",
    sitroomSet = "Administration Room has been set!",
    sendToSitRoomDesc = "Send a player to an Administration Room",
    sitroomNotSet = "No Administration Room has been set!",
    chooseSitroomTitle = "Choose an Administration Room",
    selectSitroomPrompt = "Select an Administration Room to send the player to",
    sitroomArrive = "You have arrived at an Administration Room.",
    cancel = "Cancel",
    close = "Close",
    reason = "Reason",
    reasonFor = "Reason for %s",
    lengthInDays = "Length In Days",
    salaryLimitReached = "Your salary could not be paid because you've reached the maximum balance.",
    invalidAttributeKey = "Invalid attribute key.",
    attribNonNegative = "Attribute value must be non-negative.",
    attribPositive = "Attribute value to add must be positive.",
    attribCalculationError = "Invalid attribute value calculated.",
    invalidMode = "Invalid mode selected.",
    yourAttributeSet = "Your attribute '%s' has been set to %s by %s.",
    yourAttributeIncreased = "Your attribute '%s' has been increased by %s by %s.",
    attributes = "Attributes",
    setAttributes = "Set Attributes",
    characterManagement = "Character Management",
    checkAttributes = "Check Attributes",
    attributeName = "Attribute Name",
    currentValue = "Current Value",
    maxValue = "Max Value",
    max = "Max: %s",
    progress = "Progress",
    changeAttribute = "Change Attribute",
    attribAmount = "Amount",
    attribMode = "Mode",
    add = "Add",
    set = "Set",
    addAttributes = "Add Attributes",
    changeToWhisper = "Change voice mode to Whispering range.",
    changeToTalk = "Change voice mode to Talking range.",
    changeToYell = "Change voice mode to Yelling range.",
    voiceModeSet = "Voice range set to %s.",
    whispering = "Whispering",
    talking = "Talking",
    yelling = "Yelling",
    toggleVoice = "Toggle Voice",
    moderationTools = "Moderation Tools",
    changePlayerModel = "Change Playermodel",
    cannotMuteSelf = "You cannot toggle mute on yourself.",
    cannotWarnSelf = "You cannot warn yourself.",
    voiceUnmuted = "You have unmuted %s.",
    voiceUnmutedByAdmin = "You have been unmuted by an admin.",
    voiceMuted = "You have muted %s.",
    voiceMutedByAdmin = "You have been muted by an admin.",
    muted = "Muted",
    unmuted = "Unmuted",
    noValidCharacter = "The target does not have a valid character.",
    generalInfo = "General Info",
    invalidClassError = "Invalid class '%s' provided for client.",
    charAlreadyInFaction = "This player already has another character in this faction!",
    undefinedClass = "Undefined Class",
    plyTransferDesc = "Transfers the specified player to a new faction.",
    plyWhitelistDesc = "Adds the specified player to a faction whitelist.",
    plyUnwhitelistDesc = "Removes the specified player from a faction whitelist.",
    beClassDesc = "Changes your current class to the specified class.",
    setClassDesc = "Sets the specified player's class, bypassing requirements.",
    classWhitelistDesc = "Grants the specified player whitelist access to a class.",
    classUnwhitelistDesc = "Revokes the specified player's whitelist access to a class.",
    transferSuccess = "%s has been transferred to %s.",
    transferNotification = "You have been transferred to %s by %s.",
    actionInProgress = "Action in progress",
    killedBy = "You were killed by",
    itemsLostOnDeath = "You lost %s item(s) on death.",
    exit = "Exit",
    noPrevChar = "No previous character to swap to.",
    noStaffChar = "No staff character found. Create one in the staff faction.",
    staffCharCreated = "A staff character has been automatically created for you.",
    plyViewClaimsDesc = "Displays detailed claim information for the specified player.",
    viewAllClaimsDesc = "Displays a summary table of claim data for all admins.",
    viewClaimsDesc = "Prints detailed claim information for every admin to chat.",
    viewTicketsDesc = "Displays all tickets requested by the specified player.",
    viewTicketClaims = "View Ticket Claims",
    viewTicketRequests = "View Ticket Requests",
    viewWarnings = "View Warnings",
    viewWarningsIssued = "View Warnings Issued",
    mustSpecifyPlayer = "You must specify a player name.",
    noClaimsFound = "No claims found for the specified player.",
    noTicketsFound = "No tickets found for the specified player.",
    noClaimsRecorded = "No claims have been recorded yet.",
    noClaimsData = "No claims data available.",
    claimsForTitle = "Claims for %s",
    ticketsForTitle = "Tickets for %s",
    claimRecord = "%s - %s claims",
    claimRecordLast = "%s - %s claims - last claim %s ago",
    adminClaimsTitle = "Admin Claims",
    ticketMessageToAdmins = "to admins",
    steamID = "SteamID",
    banMessage = "You've been banned for %s minute(s). (%s)",
    kickMessage = "You've been kicked. (%s)",
    genericReason = "No reason specified.",
    plyKicked = "Player kicked.",
    plyBanned = "Player banned.",
    plyKilled = "Player killed.",
    plyKickDesc = "Kick a player from the server.",
    plyBanDesc = "Ban a player from the server for a duration.",
    plyKillDesc = "Kill the specified player.",
    plyUnbanDesc = "Remove a player's ban by SteamID.",
    plyFreezeDesc = "Freeze a player for an optional duration.",
    plyUnfreezeDesc = "Unfreeze a player.",
    plySlayDesc = "Slay a player instantly.",
    plyRespawnDesc = "Respawn a player.",
    plyBlindDesc = "Blind a player with a black screen.",
    plyUnblindDesc = "Remove blindness from a player.",
    plyBlindFadeDesc = "Fade a player's screen to a color.",
    blindFadeAllDesc = "Fade all non-staff players' screens.",
    plyGagDesc = "Gag a player, blocking voice chat.",
    plyUngagDesc = "Ungag a player.",
    plyMuteDesc = "Mute a player's voice chat.",
    plyUnmuteDesc = "Unmute a player's voice chat.",
    plyBringDesc = "Teleport a player to you.",
    plyGotoDesc = "Teleport yourself to a player.",
    plyReturnDesc = "Return a player to their previous position.",
    plyJailDesc = "Jail a player by locking and freezing them.",
    plyUnjailDesc = "Release a jailed player.",
    plyCloakDesc = "Make a player invisible.",
    plyUncloakDesc = "Remove invisibility from a player.",
    plyGodDesc = "Enable god mode on a player.",
    plyUngodDesc = "Disable a player's god mode.",
    plyIgniteDesc = "Set a player on fire.",
    plyExtinguishDesc = "Extinguish the specified player.",
    plyStripDesc = "Strip all weapons from a player.",
    warnDesc = "Issues a warning to the specified player with a given reason.",
    viewWarnsDesc = "Displays all warnings issued to the specified player.",
    viewWarnsIssuedDesc = "Displays all warnings issued by the specified staff member.",
    warnPlayer = "Warn Player",
    viewPlayerWarnings = "View Player Warnings",
    playerWarningsTitle = "%s's Warnings",
    warningsIssuedTitle = "Warnings Issued by %s",
    warnings = "Warnings",
    warning = "Warning",
    warningMessage = "Warning Message",
    warnUsage = "Usage: warn [player] [reason]",
    playerWarned = "You have been warned by %s for: %s",
    warningIssued = "Warning issued to %s",
    noWarnings = "%s has no warnings.",
    id = "ID",
    timestamp = "Timestamp",
    admin = "Admin",
    noSound = "You must specify a sound path or name.",
    removeWarning = "Remove Warning",
    invalidWarningIndex = "Invalid warning index.",
    playerNotFound = "Player not found.",
    characterNotFound = "Character not found.",
    warningRemovedNotify = "A warning has been removed from your record by %s",
    warningRemoved = "Removed warning #%s from %s",
    claimCase = "Claim case",
    closeCase = "Close case",
    claimedBy = "Claimed by",
    caseAlreadyClaimed = "Case has already been claimed",
    tickets = "Tickets",
    requester = "Requester",
    ticketActionSelf = "You cannot perform this action on your own ticket.",
    spawnAddDesc = "Adds a spawn point at your current position for the specified faction.",
    spawnRemoveInRadiusDesc = "Removes all spawn points within the given radius of your position (default 120).",
    spawnRemoveByNameDesc = "Removes all spawn points for the specified faction.",
    returnItems = "Return Items",
    returnItemsDesc = "Returns items lost on death to the specified player, if any.",
    returnItemsTargetNoItems = "The target hasn't lost any items or they've already been returned.",
    returnItemsReturnedToPlayer = "Your items have been returned.",
    returnItemsAdminConfirmed = "Returned the items.",
    returnItemsNotEnabled = "Item loss on death is not enabled!",
    adminName = "Admin Name",
    totalClaims = "Total Claims",
    doorResetData = "The door data has been reset.",
    lastClaimDate = "Last Claim Date",
    timeSinceLastClaim = "Time Since Last Claim",
    claimedFor = "Claimed For",
    charVoiceToggleDesc = "Toggles voice chat ban for the specified character.",
    tookDamageSwitchCooldown = "You took damage too recently to switch characters!",
    switchCooldown = "You are on cooldown!",
    exploitAttempt = "%s (%s) may be attempting to run exploits! Used %s",
    steamIDMissing = "The SteamID of player %s (%s) wasn't received properly. This can signify tampering with net messages.",
    steamIDMismatch = "The SteamID of player %s (%s) is different than the saved one (%s).",
    kickedForInfractionPeriod = "Kicked for %s.",
    bannedForInfractionPeriod = "Banned for %s.",
    kickedForInfraction = "Kicked for",
    bannedForInfraction = "Banned for",
    togglePermakillDesc = "Toggles a character's permanent kill flag (marks or unmarks them for permanent death).",
    charkillDesc = "Opens the PK case menu to permanently kill a character.",
    toggleCheaterDesc = "Toggle a player's cheater status.",
    cheaterMarked = "Marked %s as a cheater.",
    cheaterUnmarked = "Removed cheater status from %s.",
    cheaterMarkedByAdmin = "You have been marked as a cheater by an admin.",
    cheaterUnmarkedByAdmin = "Your cheater status has been cleared.",
    cheaterStatusMarked = "Marked",
    cheaterStatusUnmarked = "Unmarked",
    cheaterActionTransferMoney = "transfer money",
    cheaterActionUseInteractionMenu = "use interaction menu",
    cheaterActionDealDamage = "deal damage",
    cheaterActionLockDoor = "lock a door",
    cheaterActionUnlockDoor = "unlock a door",
    logSwitchCharRecentDamage = "switch character (recent damage)",
    logSwitchCharCooldown = "switch character (cooldown)",
    playGlobalSoundDesc = "Play a global sound for all players.",
    playSoundDesc = "Play the specified sound on a specific player.",
    returnToDeathPosDesc = "Return to your last recorded death position.",
    forceFalloverDesc = "Force another player to fall over (go into ragdoll).",
    forceGetUpDesc = "Force another player to get up from ragdoll.",
    changeCharDesc = "Change your character's description.",
    forceSelfGetUpDesc = "Force yourself to get up from ragdoll (if possible).",
    fallOverDesc = "Fall over (ragdoll) for a certain duration.",
    toggleCharLockDesc = "Toggle whether players can swap characters.",
    characterLockDisabled = "Now the players will be able to change character",
    characterLockEnabled = "Now the players won't be able to change character until the server is restarted or until you re-enable it",
    checkInventoryDesc = "Check another player's inventory.",
    giveAllFlagsDesc = "Give all possible flags to a character.",
    takeAllFlagsDesc = "Remove all flags from a character.",
    bringLostItemsDesc = "Bring lost items in a 500 radius to your position.",
    cleanItemsDesc = "Remove all item entities from the map.",
    cleanPropsDesc = "Remove all prop entities from the map.",
    cleanNPCsDesc = "Remove all NPC entities from the map.",
    charUnbanDesc = "Unban a character by name or ID.",
    clearInvDesc = "Clear a player's entire inventory.",
    kickCharDesc = "Kick the target's active character to the character menu.",
    freezeAllPropsDesc = "Freeze all props owned by a specific player.",
    banCharDesc = "Ban a character by name or ID.",
    charUnbanOfflineDesc = "Unban an offline character using their Char ID.",
    charBanOfflineDesc = "Ban an offline character using their Char ID.",
    charWipeDesc = "Completely wipe a character from the database by name or ID.",
    charWipeOfflineDesc = "Completely wipe an offline character from the database using their Char ID.",
    charListDesc = "List all characters for a player by name or Steam ID, or yourself if none is provided.",
    checkMoneyDesc = "Check how much money the target player has.",
    listBodygroupsDesc = "List the available bodygroups for a target player.",
    setSpeedDesc = "Set a player's run speed.",
    setModelDesc = "Set a player's model.",
    giveItemDesc = "Give an item to a player's inventory.",
    setDescDesc = "Set a player's character description.",
    setNameDesc = "Set a player's character name.",
    setScaleDesc = "Set a player's model scale.",
    setJumpDesc = "Set a player's jump power.",
    setBodygroupDesc = "Set a specific bodygroup on a player's model.",
    setSkinDesc = "Set a player's skin.",
    setMoneyDesc = "Set a player's money to a specific amount.",
    addMoneyDesc = "Add a certain amount of money to a player's balance.",
    globalBotSayDesc = "Force all bots on the server to say something.",
    botSayDesc = "Force a specific bot to say something.",
    forceSayDesc = "Force a player to say something in chat.",
    forceSay = "Force Say",
    adminStickForceSayName = "Force Say",
    recogWhisperDesc = "Force player recognition in whisper range.",
    recogNormalDesc = "Force player recognition in normal range.",
    recogYellDesc = "Force player recognition in yell range.",
    recogBotsDesc = "Force all bots to recognize people around them. Optionally specify a fake name.",
    getModelDesc = "Get the model of the entity you are looking at.",
    getCharModelDesc = "Get the model of a player's character.",
    checkAllMoneyDesc = "Check every player's money balance.",
    checkFlagsDesc = "Check which flags a player has.",
    getCharNameDesc = "Get a player's character name.",
    getHealthDesc = "Get a player's current health.",
    getMoneyDesc = "Get how much money a player has.",
    getInventoryDesc = "Get the contents of a player's inventory.",
    getAllInfosDesc = "Print all character data columns to the console.",
    bannedCheaterNotify = "%s (%s) was banned for cheating or using an alt of a cheater.",
    kickedAltNotify = "%s (%s) was kicked for family sharing.",
    bannedAltNotify = "%s (%s) was banned for using a family-shared account that is blacklisted.",
    ipInChat = "Typing IP addresses in chat",
    caughtExploiting = "You were caught exploiting. Staff have been notified.",
    caughtCheating = "Cheating detected. Staff have been notified.",
    cheaterWarningReason = "Cheating or exploiting",
    cheaterDetectedStaff = "%s (%s) was flagged for cheating.",
    spawnDeletedByName = "Deleted %s spawn point(s) for faction: %s.",
    noSpawnsForFaction = "No spawn points exist for this faction.",
    spawner = "Spawner",
    pointsLeft = "Points Left",
    charDeletionCannotUndone = "This action cannot be undone.",
    charDeletionAreYouSure = "Are you sure you want to delete this character?",
    unableToJoinFactions = "You are unable to join any factions",
    maxCharactersReached = "You have reached the maximum number of characters",
    creating = "Creating...",
    next = "Next",
    finish = "Finish",
    back = "Back",
    classSet = "Your class was set to %s%s.",
    classSetOther = "You set %s class to %s.",
    classFactionMismatch = "The class does not match the target's faction!",
    whitelistFactionMismatch = "You cannot whitelist a class outside the faction.",
    alreadyWhitelisted = "This player is already whitelisted.",
    whitelistedSuccess = "Successfully whitelisted the player.",
    classAssigned = "Class '%s' has been assigned to your current character.",
    notWhitelisted = "This player is not whitelisted.",
    unwhitelistedSuccess = "Successfully removed the player's whitelist.",
    classUnassigned = "Class '%s' has been removed from your character.",
    staffTransferBlocked = "You cannot transfer a player to the staff faction through commands. Staff characters must be created through the menu system.",
    staffWhitelistBlocked = "You cannot whitelist a player to the staff faction through commands. Staff characters must be created through the menu system.",
    staffUnwhitelistBlocked = "You cannot unwhitelist a player from the staff faction through commands. Staff character management must be done through the menu system.",
    staffInviteBlocked = "You cannot invite players to the staff faction through the interaction menu. Staff characters must be created through the menu system.",
    copiedToClipboard = "Copied %s's %s to Clipboard",
    copiedCharID = "Copied CharID: %s to Clipboard",
    items = "Items",
    props = "Props",
    npcs = "NPCs",
    flagsManagement = "Flags Management",
    modifyFlagsDesc = "Set the flags for this player.",
    category = "Category",
    change = "Change",
    noEntityInFront = "No valid entity found in front of you.",
    itemNoFit = "This item can't fit in your inventory. (%sx%s)",
    cantUseThisOnSameChar = "Can't use this on the same character.",
    noChar = "No character found!",
    passwordTooQuick = "Please wait before setting another password!",
    characterAttributes = "Character Attributes",
    carTrunk = "Car Trunk",
    invalidBagItem = "Invalid bag item",
    restockVendorDesc = "Restocks all items for the vendor you are looking at to their default quantities.",
    restockVendorStickName = "Restock Selected Vendor",
    restockAllVendorsDesc = "Restocks all items on every vendor on the map to their default quantities.",
    resetAllVendorMoneyDesc = "Sets every vendor's money to the specified amount.",
    resetAllVendorMoneyStickName = "Reset Money for All Vendors",
    restockVendorMoneyDesc = "Sets the money of the vendor you're looking at to the specified amount.",
    restockVendorMoneyStickName = "Restock Money for Selected Vendor",
    banOOCCommandDesc = "Bans the specified player from using out-of-character chat.",
    banOOCStickName = "Ban OOC",
    messageTooLong = "Your message has been shortened due to being longer than %s characters!",
    unbanOOCCommandDesc = "Unbans the specified player from out-of-character chat.",
    unbanOOCStickName = "Unban OOC",
    blockOOCCommandDesc = "Toggles a global block on all out-of-character chat.",
    unlockedOOC = "Unlocked OOC!",
    blockedOOC = "Blocked OOC!",
    webImagesTitle = "Web Images",
    webImageTesterTitle = "WebImage Tester",
    imageURLPlaceholder = "Image URL (e.g., https://i.imgur.com/WNdLdwQ.jpeg)",
    loadImage = "Load Image",
    webImagesCleared = "Web image cache cleared.",
    webSoundsTitle = "Web Sounds",
    webSoundCacheCleared = "Web sound cache cleared.",
    dermaPreviewTitle = "Derma Controls Preview",
    optionWithNumber = "Option %s",
    columnWithNumber = "Column %s",
    rowColumn = "Row %s Col %s",
    nodeWithNumber = "Node %s",
    childWithNumber = "Child %s",
    enableFeature = "Enable feature",
    tabWithNumber = "Tab %s",
    categoryWithNumber = "Category %s",
    itemWithNumber = "Item %s",
    browseSoundsTitle = "Browse Sounds",
    browseMaterialsTitle = "Browse Materials",
    addonsLegacyTitle = "Addons - Legacy",
    stopAllSounds = "Stop all sounds",
    useWithMaterialTool = "Use with Material Tool",
    tryWithMaterialTool = "Try with Material Tool (may not work)",
    clearChatCommandDesc = "Clears chat for all players.",
    playerSteamID = "Player Steam ID",
    warningCount = "Warning Count",
    ticketCount = "Ticket Count",
    kickCount = "Kick Count",
    killCount = "Kill Count",
    respawnCount = "Respawn Count",
    blindCount = "Blind Count",
    muteCount = "Mute Count",
    jailCount = "Jail Count",
    stripCount = "Strip Count",
    teleportedToEntity = "Teleported to entity: %s",
    noPrivilege = "You don't have the required privilege to perform this action.",
    invalidEntity = "Invalid entity selected.",
    noPreviousPosition = "No previous position to return to.",
    returnedFromEntity = "Returned to your previous position.",
    youAreDead = "You are dead!",
    youAreRagdolled = "You are ragdolled!",
    cannotSwitchInVehicle = "You cannot switch characters while in a vehicle or sitting!",
    pressInstructions = "Press A/D to rotate | W/S to move camera vertically | Press SPACE to exit",
    entities = "Entities",
    field = "Field",
    type = "Type",
    coded = "Coded",
    decoded = "Decoded",
    banned = "Banned",
    banningAdminName = "Banning Admin Name",
    banningAdminSteamID = "Banning Admin SteamID",
    banningAdminRank = "Banning Admin Rank",
    charMoney = "Char Money",
    lastUsed = "Last Used",
    cheater = "Cheater",
    staff = "Staff",
    ban = "Ban",
    bring = "Bring",
    goTo = "Goto",
    respawn = "Respawn",
    unblind = "Unblind",
    freeze = "Freeze",
    unfreeze = "Unfreeze",
    gag = "Gag",
    ungag = "Ungag",
    mute = "Mute",
    unmute = "Unmute",
    ignite = "Ignite",
    jail = "Jail",
    slay = "Slay",
    waypointButton = "Waypoint",
    banOOC = "Ban OOC",
    blindFadeAll = "Blind Fade All",
    blockOOC = "Block OOC",
    checkInventories = "Check Inventories",
    clearChat = "Clear Chat",
    listCharacters = "List Characters",
    manageAttributes = "Manage Attributes",
    manageCharacterInformation = "Manage Character Information",
    manageCharacters = "Manage Characters",
    manageClasses = "Manage Classes",
    manageDoors = "Manage Doors",
    manageFlags = "Manage Flags",
    manageSitRooms = "Manage Administration Rooms",
    manageTransfers = "Manage Transfers",
    manageWhitelists = "Manage Whitelists",
    unbanOOC = "Unban OOC",
    viewDBTables = "View DB Tables",
    viewStaffManagement = "View Staff Management",
    information = "Information",
    returnFromSitroomDesc = "Returns you or the specified player to their previous position before teleporting to an administration room.",
    returnFromSitroom = "Return From Administration Room",
    noPreviousSitroomPos = "No previous administration room position found.",
    sitroomReturnSuccess = "Returned %s to their previous position.",
    sitroomReturned = "Returned to your previous position.",
    togglePropBlacklist = "Toggle Prop Blacklist",
    toggleCarBlacklist = "Toggle Car Blacklist",
    addedToBlacklist = "Added to blacklist: %s",
    removedFromBlacklist = "Removed from blacklist: %s",
    copyModelClipboard = "Copy Model to Clipboard",
    dbTablesTitle = "Lilia Tables",
    rowDetailsTitle = "Row Details",
    decodedTableTitle = "%s (Decoded)",
    dbTableColumn = "Table",
    databaseView = "Database View",
    permaPropOverlapWarning = "Warning: perma-props spawning too close together!",
    serverEventCharLock = "Currently the server is in an event and you're unable to change characters.",
    allBotsKicked = "All bots kicked",
    noLoadedCharacter = "No Loaded Character",
    playerInteractions = "Player Interactions",
    actionsMenu = "Actions Menu",
    interactionMenu = "Interaction Menu",
    personalActions = "Personal Actions",
    quickTakeItem = "Quick Take Item",
    inventoryTitle = "%s's Inventory",
    searchKeybinds = "Search keybinds...",
    openInventory = "Open Inventory",
    adminMode = "Admin Mode",
    searchConfigs = "Search configurations...",
    spawnmenuAll = "All",
    spawnmenuGMod = "Garry's Mod",
    materialWarning = "Please note that not all materials are usable on entities.",
    nameCopyFormat = "Name: %s (copy)",
    charIDCopyFormat = "CharID: %s (copy)",
    steamIDCopyFormat = "SteamID: %s (copy)",
    charlistTitle = "Charlist for SteamID: %s",
    giveFlagFormat = "Give Flag %s",
    takeFlagFormat = "Take Flag %s",
    setFactionTitle = "Set Faction (%s)",
    downloads = "Downloads",
    adminStick = "Admin Stick",
    adminStickPurpose = "Instructions: Press R when looking at someone to select them \nPress Shift R to select yourself \nLeft click to open menu \nRight click with selection to freeze.",
    keysWeaponName = "Keys",
    keysInstructions = "Primary Fire: Lock\nSecondary Fire: Unlock",
    keysPurpose = "Locking and Unlocking Stuff.",
    handsWeaponName = "Hands",
    handsInstructions = [[Primary Fire: Throw/Punch
Secondary Fire: Knock/Pickup
Secondary Fire + Mouse: Rotate Object
Reload: Drop]],
    handsPurpose = "Hitting things and knocking on doors.",
    entityVendorName = "Vendor",
    hackingInfraction = "Hacking",
    usingThirdPartyCheats = "using third-party cheats",
    familySharingDisabled = "family sharing (alts are disabled)",
    familySharedPickupDisabled = "You cannot pick up items with a family-shared account",
    familySharedAccountBlacklisted = "using a family-shared account that is blacklisted",
    familySharedMoneyTransferDisabled = "You cannot transfer or drop money with a family-shared account",
    databaseWipeConfirm = "TO CONFIRM DATABASE RESET, RUN '%s' AGAIN in 3 SECONDS.",
    databaseWipeProgress = "DATABASE WIPE IN PROGRESS.",
    loadedCharacters = "Loaded (%s) for %s",
    noSchemaLoaded = "No schema loaded. Please place the schema in your gamemodes folder, then set it as your gamemode.",
    missingFilePath = "Missing file path",
    invalidFont = "[Font] Invalid font name or data provided.",
    invalidClientChatAddText = "Invalid client provided to chat.AddText",
    invalidEntityClass = "Invalid entity class.",
    invalidEntityPosition = "Invalid position for %s.",
    failedEntityCreation = "Failed to create entity %s.",
    entityCreationAborted = "Entity creation aborted: An entity of class '%s' is already nearby at position (%.2f, %.2f, %.2f).",
    invalidPreparedStatement = "INVALID PREPARED STATEMENT: %s",
    dbColumnsNone = "No columns found in lia_characters.",
    dbColumnsList = "Columns in lia_characters: %s",
    preparedStatementsAdded = "ADDED 5 PREPARED STATEMENTS.",
    databaseConnected = "Lilia has connected to the database. We are using %s!",
    dbConnectionFail = "Lilia has failed to connect to the database.",
    dbPoolFail = "failed to find database in the pool",
    invalidStorageModule = "'%s' is not a valid data storage method!",
    dataWiped = "ALL LILIA DATA HAS BEEN WIPED",
    consoleUsergroupNotFound = "[Lilia Administration] usergroup not found.",
    consolePlayerNotFound = "[Lilia Administration] specified player not found.",
    usergroupExists = "[Lilia Administration] This usergroup already exists!",
    baseUsergroupCannotBeRemoved = "[Lilia Administration] The base usergroups cannot be removed!",
    usergroupDoesntExist = "[Lilia Administration] The usergroup '%s' doesn't exist!",
    baseUsergroupCannotBeRenamed = "[Lilia Administration] The base usergroups cannot be renamed!",
    compatibilityLoadedSingle = "Loaded compatibility for the following addons: %s",
    compatibilityLoadedMultiple = "Loaded the compatibilities for the following addons: %s",
    workshopAdded = "Added workshop %s to download list",
    workshopDownloading = "Downloading workshop %s",
    workshopDownloadComplete = "Completed workshop %s",
    workshopAllInstalled = "All workshop addons already installed. Skipping download.",
    workshopForcedRedownload = "Forced redownload initiated",
    downloadingWorkshopAddonsTitle = "Downloading Workshop Addons",
    workshopDownloader = "Workshop Downloader",
    workshopConfirmMount = "Download %s of workshop content?",
    moduleSkipped = "Module Skipped",
    moduleDisabledTitle = "Module Disabled",
    module = "Module",
    compatibility = "Compatibility",
    database = "Database",
    moduleSkipMissing = "Skipping module '%s' - missing %s.lua",
    moduleFinishedLoading = "Finished Loading Module '%s'",
    modulePreloadSuggestion = "Module '%s' is overridden by the schema. Place it in preload for faster loading",
    moduleUniqueIDNotFound = "Module with uniqueID '%s' not found",
    moduleNoRemoteVersion = "Module '%s' has no remote version info",
    moduleOutdated = "Module '%s' is outdated. Update to version %s",
    moduleListError = "Error fetching module list: %s",
    moduleListHTTPError = "Error fetching module list (HTTP %s)",
    moduleDataParseError = "Error parsing module data",
    privateModuleListHTTPError = "Error fetching private module list (HTTP %s)",
    privateModuleDataParseError = "Error parsing private module data",
    privateModuleOutdated = "Module '%s' is outdated, please report back to the author",
    privateModuleListError = "Error fetching private module list: %s",
    frameworkVersionHTTPError = "Error fetching framework version (HTTP %s)",
    frameworkVersionDataParseError = "Error parsing framework version data",
    localFrameworkVersionError = "Error reading local framework version",
    frameworkOutdated = "Framework is outdated. Restart the Server to update it",
    frameworkBehindCount = "Your Lilia installation is %s versions behind.",
    frameworkVersionError = "Error fetching framework version: %s",
    invalidItemNaming = "Item at '%s' follows an invalid naming convention!",
    textFileLuaRequired = "Text file found at '%s'  to use it properly, it needs to be a .lua file.",
    unknownItem = "An inventory has an unknown item '%s'",
    invalidItemInstantiate = "An inventory has a missing item '%s'",
    playerBannedFromOOC = "%s has been banned from OOC.",
    playerUnbannedFromOOC = "%s has been unbanned from OOC.",
    ticketTitleClaimed = "%s - Claimed by %s",
    serverDeletedItems = "Server Deleted Server Items (does not include Logical Items)",
    itemData = "ITEM DATA",
    unbind = "unbind",
    itemDataEntry = "[%s] = %s",
    failedLoadInventory = "Failed to load inventory %s",
    failedLoadInventories = "Failed to load inventories for %s",
    invDataNoInstance = "Got data %s for non-existent instance %s",
    currencySingular = "dollar",
    currencyPlural = "dollars",
    invalidCurrencyPosition = "[Lilia] Can't create currency entity: Invalid Position",
    invalidCurrencyAmount = "[Lilia] Can't create currency entity: Invalid Amount of money",
    generatedDarkRPItem = "Generated DarkRP entity as item %s",
    entitiesOnServer = "Entities on the server",
    entityClassCount = "Class: %s | Count: %s",
    totalEntities = "Total entities on the server: %s",
    charSetDataSQLError = "lia.char.setCharData SQL Error, q=%s, Error = %s",
    adminModeLogBack = "Switched back to their IC character",
    adminModeLogStaff = "Switched to their staff character",
    adminSystemLoaded = "Admin system has loaded",
    logRenamedSitroom = "Renamed administration room",
    logRepositionedSitroom = "Repositioned administration room",
    sitroomSetDetail = "Name: %s | Position: %s",
    sitroomRenamedDetail = "Old: %s | New: %s",
    sitroomRepositionedDetail = "Name: %s | New Position: %s",
    logSetSitroom = "Set the administration room location",
    sitroomSetLog = "Administration room set at %s by '%s': %s. Position: %s",
    sitroomRenamedLog = "%s renamed an Administration Room: %s",
    sitroomRepositionedLog = "%s repositioned an Administration Room: %s",
    sitroomTeleportedLog = "Player '%s' teleported to Administration Room '%s'.",
    sitroomSentLog = "Player '%s' sent '%s' to Administration Room '%s'.",
    sitroomReturnSelfLog = "Player '%s' returned from an Administration Room.",
    sitroomReturnOtherLog = "Player '%s' returned '%s' from an Administration Room.",
    ticketClaimed = "Claimed ticket from %s",
    botDesc = "This is a bot. BotID is %s.",
    bagName = "Bag",
    bagDesc = "A bag to hold more items.",
    aidName = "Aid Items",
    aidDesc = "Heals you bruh.",
    ammoName = "Ammo Base",
    booksName = "Book Base",
    booksDesc = "A book.",
    entitiesName = "Entities Base",
    entitiesDesc = "A Base Entity",
    grenadeName = "Grenade Base",
    grenadeDesc = "Base item for grenades.",
    outfit = "Outfit",
    outfitDesc = "A Outfit Base.",
    pacoutfitName = "PAC3 Outfit",
    pacoutfitDesc = "A PAC3 Outfit Base.",
    urlName = "Generic Item",
    urlDesc = "Generic Description",
    weaponsName = "Weapon",
    weaponsDesc = "A Weapon.",
    stackableName = "Stackable Item",
    stackableDesc = "Amount: %s",
    itemCatAmmunition = "Ammunition",
    itemCatGrenades = "Grenades",
    itemCatLiterature = "Literature",
    renameGroupPrompt = "New name for '%s'",
    deleteGroupPrompt = "Delete group '%s'?",
    groupCreated = "Group '%s' created.",
    groupRemoved = "Group '%s' removed.",
    groupRenamed = "Group '%s' renamed to '%s'.",
    groupPermissionsUpdated = "Group permissions updated.",
    kick = "Kick",
    characterList = "Character List",
    allCharacters = "All Characters",
    kickConfirm = "Are you sure you want to kick this player?",
    confirm = "Confirm",
    firstJoin = "First Join",
    lastOnline = "Last Online",
    banCharacter = "Ban Character",
    wipeCharacter = "Wipe Character",
    unbanCharacter = "Unban Character",
    kickedFromFaction = "You were kicked from your faction!",
    invalidCharID = "Invalid character ID.",
    offlineCharUnbanned = "Offline character ID %s has been unbanned.",
    offlineCharBanned = "Offline character ID %s has been banned.",
    offlineCharWiped = "Offline character ID %s has been wiped from the database.",
    noCharactersForPlayer = "No characters found for this player.",
    playerUnbanned = "Player unbanned",
    youHaveBeenBanned = "You have been banned.",
    youHaveBeenWiped = "Your character has been wiped from the database.",
    idPrefix = "ID: %s",
    userGroups = "Permissions",
    failedInsertCharData = "Failed to insert character data: %s",
    validationError = "Validation error",
    allInfoFor = "=== All information for %s ===",
    backdoorDetectedConsole = "%s has been detected! Check your addons and remove the backdoor.",
    backdoorDeclaredIn = "%s was declared in %s line %s",
    unableCreateStorageEntity = "Unable to create storage entity for %s\n%s",
    agoFormat = "%s (%s) ago",
    itemNotFound = "Item not found",
    compatibilityConditionError = "Compatibility condition error: %s",
    uncategorized = "Uncategorized",
    invalidItemTypeOrID = "Invalid item type or ID %s",
    noSpaceForItem = "No space available for the item.",
    itemMustBeTable = "Item must be a table",
    itemWidthPositiveNumber = "item.width must be a positive number",
    itemHeightPositiveNumber = "item.height must be a positive number",
    quantityMustBeNumber = "Quantity must be a number",
    quantityMustBePositive = "Quantity must be positive",
    itemIDNumberRequired = "Item ID must be a number",
    itemActionNoPlayer = "Item action cannot be performed without a player",
    commandNoCallback = "Command '%s' does not have a callback, not adding!",
    inventoryInvalidItem = "Inventory %s contains invalid item %s (%s)",
    noInventoryLoader = "No inventories implement loadFromStorage for ID %s",
    inventoryInvalidType = "Inventory %s has invalid type %s",
    duplicateInventoryType = "Duplicate inventory type %s",
    registerTypeString = "Expected argument #1 of %s.register to be a string",
    cannotSyncNonItem = "Cannot sync non-item",
    itemDoesNotBelong = "Item %s does not belong to %s",
    expectedTableArg = "Expected table for argument #%s",
    badInventoryType = "Bad inventory type %s",
    invalidInventoryType = "Invalid inventory type %s",
    initialDataMustBeTable = "initialData must be a table for lia.inventory.instance",
    charIDMustBeNumber = "charID must be a number",
    netVarBadType = "Net var '%s' contains a bad object type!",
    invalidCharacterID = "[Lilia] Cannot load character '%s' with invalid ID!",
    invalidFactionIndex = "%s is an invalid faction index",
    classNoValidFaction = "Class '%s' does not have a valid faction!",
    factionMissingColor = "Faction '%s' is missing a color. You need to add FACTION.color = Color(1, 2, 3)",
    storageInventoryMissing = "Storage setInventory called without an inventory!",
    missingVcRedistributables = "Server is missing VC++ redistributables!",
    factionMissingName = "Faction '%s' is missing a name. You need to add a FACTION.name",
    factionMissingDesc = "Faction '%s' is missing a description. You need to add a FACTION.desc",
    permaPropSavedLog = "%s perma-propped %s (%s) at %s",
    permaPropOverlapLog = "Perma-prop spawned at %s overlapping prop at %s.",
    dupeCrashAttemptLog = "Player '%s' [%s] attempted to duplicate oversized entities.",
    unprotectedVJNetCallLog = "%s triggered unprotected net message '%s'.",
    defaultGameDescription = "A Lilia Gamemode",
    vendors = "Vendors",
    storage = "Storage",
    moduleDoorsName = "Doors",
    recognition = "Recognition",
    mainMenu = "Main Menu",
    modulePermissionsName = "Permissions",
    moduleStaffManagementName = "Staff Management",
    scoreboard = "Scoreboard",
    sbWidth = "Scoreboard Width",
    sbWidthDesc = "Scoreboard width proportion",
    sbHeight = "Scoreboard Height",
    sbHeightDesc = "Scoreboard height proportion",
    sbDock = "Scoreboard Dock",
    sbDockDesc = "Determines where the scoreboard appears on screen",
    left = "Left",
    center = "Center",
    right = "Right",
    classHeaders = "Class Headers",
    classHeadersDesc = "Should class headers exist?",
    useSolidBackground = "Use Solid Background in Scoreboard",
    useSolidBackgroundDesc = "Use a solid background for the scoreboard",
    classLogo = "Should Class Logo Appear in the Player Bar",
    classLogoDesc = "Toggle display of class logo next to player entries",
    scoreboardBackgroundColor = "Scoreboard Background Color",
    scoreboardBackgroundColorDesc = "Sets the background color of the scoreboard. This only applies if 'UseSolidBackground' is enabled.",
    protection = "Protection",
    canEditVendors = "Can Edit Vendors",
    canSpawnStorage = "Can Spawn Storage",
    managePropBlacklist = "Manage Prop Blacklist",
    manageVehicleBlacklist = "Manage Vehicle Blacklist",
    manageUsergroups = "Manage Permissions",
    accessEditConfigurationMenu = "Access Edit Configuration Menu",
    alwaysSpawnAdminStick = "Always Spawn w/ Admin Stick",
    canAccessFlagManagement = "Can Access Flag Management",
    canAccessPlayerList = "Can Access Player List",
    canSeeLogs = "Can See Logs",
    canRemoveWarns = "Can Remove Warns",
    canUseItemSpawner = "Can Use Item Spawner",
    canUsePAC3 = "Can Use PAC3",
    alwaysSeeTickets = "Always See Tickets",
    noOOCCooldown = "No OOC Cooldown",
    adminChat = "Admin Chat",
    localEventChat = "Local Event Chat",
    eventChat = "Event Chat",
    accessHelpChat = "Always Have Access to Help Chat",
    canSeeAltingNotifications = "Can See Alting Notifications",
    receiveCheaterNotifications = "Receive Cheater Notifications",
    canSeeSAMNotificationsOutsideStaff = "Can See SAM Notifications Outside Staff Character",
    canBypassSAMFactionWhitelist = "Can Bypass Staff Faction SAM Command whitelist",
    canAccessScoreboardAdminOptions = "Can Access Scoreboard Admin Options",
    canAccessScoreboardInfoOutOfStaff = "Can Access Scoreboard Info Out Of Staff",
    canBypassCharacterLock = "Can Bypass Character Lock",
    canGrabWorldProps = "Can Grab World Props",
    canGrabPlayers = "Can Grab Players",
    physgunPickup = "Physgun Pickup",
    canAccessItemInformations = "Can Access Item Informations",
    physgunPickupRestrictedEntities = "Physgun Pickup on Restricted Entities",
    physgunPickupVehicles = "Physgun Pickup on Vehicles",
    cantBeGrabbedPhysgun = "Can't be Grabbed with PhysGun",
    canPhysgunReload = "Can Physgun Reload",
    useDisallowedTools = "Use Disallowed Tools",
    noClipOutsideStaff = "No Clip Outside Staff Character",
    noClipESPOffsetStaff = "No Clip ESP Outside Staff Character",
    canPropertyWorldEntities = "Can Property World Entities",
    canSpawnRagdolls = "Can Spawn Ragdolls",
    canSpawnSWEPs = "Can Spawn SWEPs",
    canSpawnEffects = "Can Spawn Effects",
    canSpawnProps = "Can Spawn Props",
    canSpawnBlacklistedProps = "Can Spawn Blacklisted Props",
    canSpawnNPCs = "Can Spawn NPCs",
    noCarSpawnDelay = "No Car Spawn Delay",
    canSpawnCars = "Can Spawn Cars",
    canSpawnBlacklistedCars = "Can Spawn Blacklisted Cars",
    canEditSimfphysCars = "Can Edit Simfphys Cars",
    canSpawnSENTs = "Can Spawn SENTs",
    canRemoveBlockedEntities = "Can Remove Blocked Entities",
    canRemoveWorldEntities = "Can Remove World Entities",
    viewEntityTab = "Staff Permission  View Entity (Entity Tab)",
    teleportToEntity = "Staff Permission  Teleport to Entity",
    accessPropertyPrivilege = "Access to %s property",
    accessToolPrivilege = "Access Tool %s",
    privilegeViewer = "Access to view all privileges",
    categoryBlacklisting = "Blacklisting",
    categoryStaffBlacklisting = "Staff: Blacklisting",
    categoryStaffItems = "Staff: Items",
    categoryStaffManagement = "Staff: Management",
    createStaffCharacter = "Create Staff Character",
    categoryStaffMovement = "Staff: Movement",
    categoryStaffPhysgun = "Staff: Physgun",
    categoryStaffProtection = "Staff: Protection",
    categoryStaffTools = "Staff: Tools",
    categoryLogging = "Logging",
    categorySpawnProps = "Spawn: Props",
    categorySpawnVehicles = "Spawn: Vehicles",
    categorySpawnGeneral = "Spawn: General",
    categorySpawnEffects = "Spawn: Effects",
    categorySpawnNPCs = "Spawn: NPCs",
    categorySpawnRagdolls = "Spawn: Ragdolls",
    categorySpawnSENTs = "Spawn: SENTs",
    categorySpawnSWEPs = "Spawn: SWEPs",
    categorySpawnStorage = "Spawn: Storage",
    categorySpawnBlacklisting = "Spawn: Blacklisting",
    categoryPAC3 = "PAC3",
    categoryConfiguration = "Configuration",
    categoryFactionManagement = "Faction: Management",
    categoryVoice = "Voice",
    categoryRecognition = "Recognition",
    categoryUnsorted = "Unsorted",
    categoryUsergroups = "Permissions",
    categoryStaffSettings = "Staff: Settings",
    doorLockTime = "Door Lock Time",
    doorLockTimeDesc = "Time it takes to lock a door",
    doorSellRatio = "Door Sell Ratio",
    doorSellRatioDesc = "Percentage you can sell a door for",
    defaultMenuTab = "Default Menu Tab",
    defaultMenuTabDesc = "Specifies which tab is opened by default when the menu is shown.",
    spawnMenuLimit = "Limit Spawn Menu Access",
    spawnMenuLimitDesc = "Determines if the spawn menu is limited to PET flag holders or staff",
    barsAlwaysVisible = "Bars Always Visible",
    barsAlwaysVisibleDesc = "Make all bars always visible",
    descriptionWidth = "Description Width",
    descriptionWidthDesc = "Adjust the description width on the HUD",
    chatShowTime = "Show Chat Timestamp",
    chatShowTimeDesc = "Should chat show timestamp",
    voiceRange = "Voice Range",
    voiceRangeDesc = "Display a circle showing your current voice range",
    switchCooldownOnAllEntities = "Apply cooldown on all entities",
    switchCooldownOnAllEntitiesDesc = "If true, character switch cooldowns gets applied by all types of damage.",
    onDamageCharacterSwitchCooldownTimer = "Switch cooldown after damage",
    onDamageCharacterSwitchCooldownTimerDesc = "Cooldown duration (in seconds) after taking damage to switch characters.",
    characterSwitchCooldownTimer = "Character switch cooldown timer",
    characterSwitchCooldownTimerDesc = "Cooldown duration (in seconds) for switching characters.",
    explosionRagdoll = "Explosion Ragdoll on Hit",
    explosionRagdollDesc = "Determines whether being hit by an explosion results in ragdolling",
    carRagdoll = "Car Ragdoll on Hit",
    carRagdollDesc = "Determines whether being hit by a car results in ragdolling",
    npcsDropWeapons = "NPCs Drop Weapons on Death",
    npcsDropWeaponsDesc = "Controls whether NPCs drop weapons upon death",
    timeUntilDroppedSWEPRemoved = "Time Until Dropped SWEP Removed",
    timeUntilDroppedSWEPRemovedDesc = "Specifies the duration (in seconds) until a dropped SWEP is removed",
    altsDisabled = "Disable Alts",
    altsDisabledDesc = "Whether or not alting is permitted",
    actsActive = "Enable Acts",
    actsActiveDesc = "Determines whether acts are active",
    propProtection = "Prop Protection",
    propProtectionDesc = "Enables prop crash prevention behaviors (physgun pickup/drop collision safety and freeze pass-through).",
    passableOnFreeze = "Passable on Freeze",
    passableOnFreezeDesc = "Makes it so that props frozen can be passed through when frozen",
    playerSpawnVehicleDelay = "Player Spawn Vehicle Delay",
    playerSpawnVehicleDelayDesc = "Delay for spawning a vehicle after the previous one",
    toolInterval = "Tool Gun Usage Cooldown",
    disableLuaRun = "Disable Lua Run Hooks",
    disableLuaRunDesc = "Whether or not Lilia should prevent lua_run hooks on maps",
    equipDelay = "Equip Delay",
    equipDelayDesc = "Time delay between equipping items.",
    unequipDelay = "Unequip Delay",
    unequipDelayDesc = "Time delay between unequipping items.",
    dropDelay = "Drop Delay",
    dropDelayDesc = "Time delay between dropping items.",
    takeDelay = "Take Delay",
    takeDelayDesc = "Time delay between taking items.",
    itemGiveSpeed = "Item Give Speed",
    itemGiveSpeedDesc = "How fast transferring items between players via giveForward is.",
    itemGiveEnabled = "Is Item Giving Enabled",
    itemGiveEnabledDesc = "Determines if item giving via giveForward is enabled.",
    disableCheaterActions = "Disable Cheater Actions",
    disableCheaterActionsDesc = "Prevents flagged cheaters from interacting with the game.",
    mainMenuMusicVolume = "Music Volume",
    mainMenuMusicVolumeDesc = "The volume level for the main menu music",
    mainMenuMusic = "Main Menu Music",
    mainMenuMusicDesc = "The file path or URL for the main menu background music",
    mainMenuBackgroundURL = "Main Menu Background URL",
    mainMenuBackgroundURLDesc = "The URL or file path for the main menu background image",
    mainMenuCenterLogo = "Center Logo",
    mainMenuCenterLogoDesc = "The file path or URL for the logo displayed at the center of the screen",
    mainMenuDiscordURL = "Server Discord URL",
    mainMenuDiscordURLDesc = "The URL for the Discord server",
    discordRelayLilia = "Lilia",
    discordRelayLiliaLogger = "Lilia Logger",
    discordRelayLiliaDiscordRelay = "Lilia Discord Relay",
    discordAntiCheatTitle = "Anti-Cheat System",
    discordAntiCheatDescription = "A player has been confirmed as cheating",
    discordAntiCheatPlayer = "Player",
    discordAntiCheatStatus = "Status",
    discordAntiCheatConfirmedCheater = "Confirmed Cheater",
    discordTicketSystemTitle = "Ticket System",
    discordTicketSystemClaimedDescription = "A help ticket has been claimed by staff",
    discordTicketSystemCreatedDescription = "A new help ticket has been created",
    discordTicketSystemClosedDescription = "A help ticket has been closed",
    discordTicketSystemStaffMember = "Staff Member",
    discordTicketSystemRequester = "Requester",
    discordTicketSystemOriginalMessage = "Original Message",
    discordTicketSystemMessage = "Message",
    discordTicketSystemNoMessageProvided = "No message provided",
    discordWarningSystemTitle = "Warning System",
    discordWarningSystemIssuedDescription = "A warning has been issued to a player",
    discordWarningSystemRemovedDescription = "A warning has been removed from a player",
    discordWarningSystemAdmin = "Admin",
    discordWarningSystemTargetPlayer = "Target Player",
    discordWarningSystemReason = "Reason",
    discordWarningSystemNoReasonSpecified = "No reason specified",
    discordWarningSystemWarningCount = "Warning Count",
    discordWarningSystemRemovedWarningReason = "Removed Warning Reason",
    discordWarningSystemWarningIndex = "Warning Index",
    discordWarningSystemOriginalWarner = "Original Warner",
    discordWarningSystemUnknown = "Unknown",
    mainMenuWorkshopURL = "Server Workshop URL",
    mainMenuWorkshopURLDesc = "The URL for the Steam Workshop page",
    mainMenuCharBGInputDisabled = "Disable Character Menu Background Input",
    mainMenuCharBGInputDisabledDesc = "Whether background input is disabled during character menu use",
    recognitionEnabled = "Character Recognition Enabled",
    recognitionEnabledDesc = "Whether or not character recognition is enabled?",
    fakeNamesEnabled = "Fake Names Enabled",
    fakeNamesEnabledDesc = "Are fake names enabled?",
    categoryMenu = "Menu",
    categoryGeneral = "General",
    categoryHUD = "HUD",
    categoryChat = "Chat",
    categoryQualityOfLife = "Quality of Life",
    categoryCombat = "Combat",
    categoryWorld = "World",
    categoryTools = "Tools",
    categoryConnections = "Connections",
    categoryExploits = "Exploits",
    categoryCheating = "Cheating",
    categoryCheaterActions = "Cheater Actions",
    changeWeaponPopup = "Change Weapon (Popup)",
    changeWeaponOf = "Change weapon of %s",
    npcWeaponWarning1 = "WARNING! Not all NPCs can use weapons and not all weapons are usable by NPCs.",
    npcWeaponWarning2 = "This is entirely dependent on the addon the weapon and the NPC are from. This mod cannot change that.",
    noInventorySet = "No inventory has been set!",
    invalidActionMenuItem = "Cannot open action menu for invalid item",
    idMustBeNumber = "id must be a number",
    invalidCharVar = "Invalid character variable %s",
    noStepAvailable = "No step is available",
    noCharacterSteps = "No character creation steps available",
    invalidPanelForStep = "Invalid panel for step",
    panelMustInherit = "Panel must inherit liaCharacterCreateStep",
    blind = "Blind",
    warned = "Warned",
    canManageFactions = "Can Manage Factions",
    command = "Command",
    description = "Description",
    factionManagement = "Faction Management",
    openSteamProfile = "Open Steam Profile",
    players = "Players",
    privilege = "Privilege",
    you = "You",
    player = "Player",
    evidence = "Evidence",
    submitter = "Submitter",
    pkActiveMenu = "PK Active Menu",
    pkManager = "PK Manager",
    copySubmitter = "Copy Submitter",
    copyReason = "Copy Reason",
    copyEvidence = "Copy Evidence",
    viewEvidence = "View Evidence",
    banCharacterOffline = "Ban Character (Offline)",
    wipeCharacterOffline = "Wipe Character (Offline)",
    unbanCharacterOffline = "Unban Character (Offline)",
    evidenceInvalidURL = "Evidence must be a valid URL.",
    pkDialogMessage = "Your character: %s, has been permanently killed. An administrator has approved this PK.\nPKs are a regular part of RP; you can always make a new character. Have fun!",
    permaKillTitle = "Permanent Kill",
    iAcknowledge = "I acknowledge",
    liliaSkin = "Lilia Skin",
    liliaSkinDesc = "The skin for the Lilia framework.",
    liliaAltSkinDesc = "The alt skin for the Lilia framework.",
    needModel = "You need to choose a valid model.",
    invWidth = "Inventory Width",
    invWidthDesc = "Defines the width of the default inventory.",
    invHeight = "Inventory Height",
    invHeightDesc = "Defines the height of the default inventory.",
    trunkInvWidth = "Trunk Inventory Width",
    trunkInvWidthDesc = "Defines the width of the default trunk inventory.",
    trunkInvHeight = "Trunk Inventory Height",
    trunkInvHeightDesc = "Defines the height of the default trunk inventory.",
    takeDamageInCars = "Take Damage in Cars",
    takeDamageInCarsDesc = "Whether or not you take damage while in cars",
    carEntryDelayEnabled = "Car Entry Delay Enabled",
    carEntryDelayEnabledDesc = "Whether entering a vehicle requires a delay.",
    timeToEnterVehicle = "Time To Enter Vehicle",
    timeToEnterVehicleDesc = "Defines the time to enter vehicle.",
    simfphysVehicles = "Simfphys Vehicles",
    blockPackUrlLoad = "Block Pack URL Load",
    blockPackUrlLoadDesc = "Determines whether loading PAC3 packs from a URL should be blocked.",
    adminOnlyNotifications = "Admin Only Notifications",
    adminOnlyNotificationsDesc = "Restricts certain notifications to admins with specific permissions or those on duty.",
    samEnforceStaff = "Enforce Staff Rank To SAM",
    samEnforceStaffDesc = "Determines whether staff enforcement for SAM commands is enabled",
    categorySAM = "SAM | Admin Mod",
    categoryServerGuard = "ServerGuard",
    categorySecurity = "Security",
    categoryPermaProps = "PermaProps",
    categoryVJBase = "VJ Base",
    vjNpcProperties = "VJ NPC Properties",
    categoryFonts = "Fonts",
    categoryData = "Data",
    categoryTimers = "Timers",
    categoryVisuals = "Visuals",
    moneyModel = "Money Model",
    moneyModelDesc = "Defines the model used for representing money in the game.",
    moneyLimit = "Money Limit",
    moneyLimitDesc = "Sets the limit of money a player can have [0 for infinite].",
    maxMoneyEntities = "Max Money Entities",
    maxMoneyEntitiesDesc = "Maximum number of money entities that can be dropped at once.",
    currencySymbol = "Currency Symbol",
    currencySymbolDesc = "Specifies the currency symbol used in the game.",
    pkWorld = "PK World Deaths Count",
    pkWorldDesc = "When marked for Perma Kill, do world deaths count as perma killing?",
    currencySingularName = "Currency Singular Name",
    currencySingularNameDesc = "Singular name of the in-game currency.",
    currencyPluralName = "Currency Plural Name",
    currencyPluralNameDesc = "Plural name of the in-game currency.",
    walkSpeedDesc = "Controls how fast characters walk.",
    runSpeedDesc = "Controls how fast characters run.",
    walkRatio = "Walk Ratio",
    walkRatioDesc = "Defines the walk speed ratio when holding the Alt key.",
    allowDuplicateNames = "Allow Duplicate Names",
    allowDuplicateNamesDesc = "Determines whether duplicate character names are allowed.",
    whitelistEnabled = "Whitelist Enabled",
    whitelistEnabledDesc = "Determines whether the whitelist feature is enabled on the server.",
    blacklistEnabled = "Blacklist Enabled",
    blacklistEnabledDesc = "Determines whether the blacklist feature is enabled on the server.",
    maxCharacters = "Max Characters",
    maxCharactersDesc = "Sets the maximum number of characters a player can have.",
    allowPMs = "Allow Private Messages",
    allowPMsDesc = "Determines whether private messages are allowed.",
    minDescriptionLength = "Minimum Description Length",
    minDescriptionLengthDesc = "Minimum length required for a character's description.",
    saveInterval = "Save Interval",
    saveIntervalDesc = "Interval for character saves in seconds.",
    defaultMoney = "Default Money",
    defaultMoneyDesc = "Specifies the default amount of money a player starts with.",
    dataSaveInterval = "Data Save Interval",
    dataSaveIntervalDesc = "Time interval between data saves.",
    characterDataSaveInterval = "Character Data Save Interval",
    characterDataSaveIntervalDesc = "Time interval between character data saves.",
    respawnTime = "Respawn Time",
    respawnTimeDesc = "Time to respawn after death.",
    maxChatLength = "Max Chat Length",
    maxChatLengthDesc = "Sets the maximum length of chat messages.",
    schemaYear = "Schema Year",
    schemaYearDesc = "Year of the gamemode's schema.",
    americanDates = "American Dates",
    americanDatesDesc = "Determines whether to use the American date format.",
    americanTimeStamp = "American Timestamp",
    americanTimeStampDesc = "Determines whether to use the American timestamp format.",
    adminConsoleNetworkLogs = "Admin Console Network Logs",
    adminConsoleNetworkLogsDesc = "Specifies if the logging system should replicate to super admins' consoles.",
    themeColor = "Theme Color",
    themeColorDesc = "Sets the theme color used throughout the gamemode.",
    charMenuBGInputDisabled = "Character Menu BG Input Disabled",
    charMenuBGInputDisabledDesc = "Whether background input is disabled during character menu use",
    allowKeybindEditing = "Allow Keybind Editing",
    allowKeybindEditingDesc = "Whether keybind editing is allowed",
    enableCrosshair = "Enable Crosshair",
    enableCrosshairDesc = "Enables the crosshair.",
    disableBars = "Disable Bars",
    disableBarsDesc = "Disables bars.",
    autoWeaponItemGeneration = "Auto Weapon-to-Item Generation",
    autoWeaponItemGenerationDesc = "Enables automatic conversion of dropped weapons into inventory items.",
    autoAmmoItemGeneration = "Auto Ammo Item Generation",
    autoAmmoItemGenerationDesc = "Enables automatic conversion of ammo entities into inventory items.",
    enableAmmoDisplay = "Enable Ammo Display",
    enableAmmoDisplayDesc = "Enables ammo display.",
    voiceChatEnabled = "Voice Chat Enabled",
    voiceChatEnabledDesc = "Whether or not voice chat is enabled.",
    salaryInterval = "Salary Interval",
    salaryIntervalDesc = "Interval in seconds between salary payouts.",
    salaryThreshold = "Salary Threshold",
    salaryThresholdDesc = "Money threshold above which salaries will not be given.",
    categorySalary = "Salary",
    thirdPersonEnabled = "Enable Third-Person View",
    thirdPersonEnabledDesc = "Allows players to toggle third-person view on or off.",
    maxThirdPersonDistance = "Maximum Third-Person Distance",
    maxThirdPersonDistanceDesc = "The maximum allowable camera distance in third-person view.",
    wallPeek = "Wall Peek",
    wallPeekDesc = "Limits third-person wall peeking by hiding players outside view or obstructed.",
    maxThirdPersonHorizontal = "Maximum Third-Person Horizontal Offset",
    maxThirdPersonHorizontalDesc = "The maximum allowable horizontal offset for third-person view.",
    maxThirdPersonHeight = "Maximum Third-Person Height Offset",
    maxThirdPersonHeightDesc = "The maximum allowable vertical offset for third-person view.",
    categoryThirdPerson = "Third Person",
    categoryRendering = "Rendering",
    maxViewDistance = "Maximum View Distance",
    maxViewDistanceDesc = "The maximum distance (in units) at which players are visible. This default covers an entire Source map (~32k units).",
    dermaSkin = "Derma UI Skin",
    dermaSkinDesc = "Select the Derma UI skin to use.",
    language = "Language",
    languageDesc = "Determines the language setting for the game.",
    logRetentionPeriod = "Log Retention Period",
    logRetentionPeriodDesc = "Determines how many days of logs should be read.",
    maximumLogLines = "Maximum Log Lines",
    maximumLogLinesDesc = "Determines the maximum number of log lines to retrieve.",
    staminaBlurEnabled = "Stamina Blur Enabled",
    staminaBlurEnabledDesc = "Is Stamina Blur Enabled?",
    staminaSlowdownEnabled = "Stamina Slowdown Enabled",
    staminaSlowdownEnabledDesc = "Is Stamina Slowdown Enabled?",
    defaultStaminaValue = "Default Stamina Value",
    defaultStaminaValueDesc = "Sets default stamina value.",
    maxAttributePoints = "Max Attribute Points",
    maxAttributePointsDesc = "Maximum number of points that can be allocated across an attribute.",
    jumpStaminaCost = "Jump Stamina Cost",
    jumpStaminaCostDesc = "Stamina cost deducted when the player jumps.",
    maxStartingAttributes = "Max Starting Attributes",
    maxStartingAttributesDesc = "Maximum value of each attribute at character creation.",
    startingAttributePoints = "Starting Attribute Points",
    startingAttributePointsDesc = "Total number of points available for starting attribute allocation.",
    punchStamina = "Punch Stamina",
    punchStaminaDesc = "Stamina usage for punches.",
    maximumHoldWeight = "Maximum Hold Weight",
    maximumHoldWeightDesc = "The maximum weight that a player can carry in their hands.",
    throwForce = "Throw Force",
    throwForceDesc = "How hard a player can throw the item that they're holding.",
    allowPush = "Allow Push",
    allowPushDesc = "Whether or not pushing with hands is allowed.",
    punchPlaytimeProtection = "Punch Playtime Protection",
    punchPlaytimeProtectionDesc = "Minimum playtime in seconds required to punch.",
    customChatSound = "Custom Chat Sound",
    customChatSoundDesc = "Change chat sound on message send.",
    chatColor = "Chat Color",
    chatColorDesc = "Chat color.",
    chatRange = "Chat Range",
    chatRangeDesc = "Range at which chat can be heard.",
    oocCharacterLimit = "OOC Character Limit",
    oocCharacterLimitDesc = "Limit of characters in OOC.",
    chatListenColor = "Chat Listen Color",
    chatListenColorDesc = "Color of chat when directly looking at someone.",
    oocDelayTitle = "OOC Delay",
    oocDelayDesc = "Set OOC text delay.",
    loocDelayTitle = "LOOC Delay",
    loocDelayDesc = "Set LOOC text delay.",
    loocDelayAdmin = "LOOC Delay for Admins",
    loocDelayAdminDesc = "Should admins have LOOC delay.",
    enableDifferentChatSize = "Enable Different Chat Size",
    enableDifferentChatSizeDesc = "Enable different chat size.",
    invertWeaponScroll = "Invert Weapon Scroll",
    invertWeaponScrollDesc = "Invert the weapon selection scroll direction.",
    categoryWeaponSelector = "Weapon Selector",
    autoDownloadWorkshop = "Auto Workshop Download",
    autoDownloadWorkshopDesc = "Automatically download server Workshop content.",
    categoryWorkshop = "Workshop",
    espEnabled = "ESP Enabled",
    espEnabledDesc = "Toggle ESP features.",
    espPlayers = "ESP Players",
    espPlayersDesc = "Enable ESP for players.",
    espItems = "ESP Items",
    espItemsDesc = "Enable ESP for items.",
    espEntities = "ESP Entities",
    espEntitiesDesc = "Enable ESP for entities.",
    espUnconfiguredDoors = "ESP Unconfigured Doors",
    espUnconfiguredDoorsDesc = "Enable ESP for doors without configuration.",
    espItemsColor = "ESP Items Color",
    espItemsColorDesc = "Sets the ESP color for items.",
    espEntitiesColor = "ESP Entities Color",
    espEntitiesColorDesc = "Sets the ESP color for entities.",
    espUnconfiguredDoorsColor = "ESP Unconfigured Doors Color",
    espUnconfiguredDoorsColorDesc = "Sets the ESP color for unconfigured doors.",
    espPlayersColor = "ESP Players Color",
    espPlayersColorDesc = "Sets the ESP color for players.",
    categoryESP = "ESP",
    thirdPersonClassicMode = "Classic Mode",
    thirdPersonClassicModeDesc = "Enable classic third-person view mode.",
    thirdPersonHeight = "Height",
    thirdPersonHeightDesc = "Adjust the vertical height of the third-person camera.",
    thirdPersonHorizontal = "Horizontal",
    thirdPersonHorizontalDesc = "Adjust the horizontal offset of the third-person camera.",
    thirdPersonDistance = "Distance",
    thirdPersonDistanceDesc = "Adjust the camera distance in third-person view.",
    loseItemsOnNPCDeath = "Lose Items on NPC Death",
    loseItemsOnNPCDeathDesc = "Determine if items marked for loss are lost on death by NPCs.",
    loseItemsOnHumanDeath = "Lose Items on Human Death",
    loseItemsOnHumanDeathDesc = "Determine if items marked for loss are lost on death by humans.",
    loseItemsOnWorldDeath = "Lose Items on World Death",
    loseItemsOnWorldDeathDesc = "Determine if items marked for loss are lost on death by the world.",
    enableDeathPopup = "Enable Death Popup",
    enableDeathPopupDesc = "Enable or disable the death information popup.",
    staffGodMode = "Staff God Mode",
    staffGodModeDesc = "Whether or not Staff On Duty has God Mode.",
    displayClassesOnCharacters = "Display Classes on Characters",
    displayClassesOnCharactersDesc = "Whether or not classes are displayed on characters.",
    vendorDefaultMoney = "Default Vendor Money",
    vendorDefaultMoneyDesc = "Sets the default amount of money vendors start with.",
    vendor = "Vendor",
    logPlayerRecognizedCharacter = "Player '%s' recognized character with ID %s and name '%s'.",
    logPlayerCreatedCharacter = "Player '%s' created a new character named '%s'.",
    logPlayerLoadedCharacter = "Player '%s' loaded character '%s'.",
    logPlayerDeletedCharacter = "%s deleted character ID %s.",
    logPlayerTookDamage = "Player '%s' took %s damage from '%s'. Current Health: %s",
    logPlayerKilled = "Player '%s' was killed by '%s'.",
    logPlayerSpawned = "Player '%s' spawned.",
    logPlayerSpawnedProp = "Player '%s' spawned prop: %s.",
    logPlayerSpawnedRagdoll = "Player '%s' spawned ragdoll: %s.",
    logPlayerSpawnedEffect = "Player '%s' spawned effect: %s.",
    logPlayerSpawnedVehicle = "Player '%s' spawned vehicle '%s' with model '%s'.",
    logPlayerSpawnedNPC = "Player '%s' spawned NPC '%s' with model '%s'.",
    logPlayerSpawnedEntity = "Player '%s' spawned entity '%s' with model '%s'.",
    logPlayerSpawnedSWEP = "Player '%s' spawned SWEP '%s'.",
    logPhysgunPickup = "Player '%s' picked up '%s' (%s) with the physgun.",
    logPhysgunDrop = "Player '%s' dropped '%s' (%s) with the physgun.",
    logPhysgunFreeze = "Player '%s' froze '%s' (%s) with the physgun.",
    logVehicleEnter = "Player '%s' entered vehicle '%s' (%s).",
    logVehicleExit = "Player '%s' left vehicle '%s' (%s).",
    logChatMessage = "(%s) %s said: '%s'",
    logChatOOC = "Player '%s' said (OOC): '%s'.",
    logChatLOOC = "Player '%s' said (LOOC): '%s'.",
    logCommand = "Player '%s' ran command: %s.",
    logMoneyChange = "Player '%s' changed money by: %s.",
    logMoneyPickedUp = "Player '%s' picked up %s %s.",
    logCharSetMoney = "Admin '%s' set %s's money to %s.",
    logCharAddMoney = "Admin '%s' gave %s %s (New Total: %s).",
    logMoneyDropped = "Player '%s' dropped %s on the ground.",
    logItemTake = "Player '%s' took item '%s'.",
    logItemUse = "Player '%s' used item '%s'.",
    logItemDrop = "Player '%s' dropped item '%s'.",
    logItemInteractionFailed = "Player '%s' failed to %s item '%s'.",
    logItemInteraction = "Player '%s' %s item '%s'.",
    logItemEquip = "Player '%s' equipped item '%s'.",
    logItemUnequip = "Player '%s' unequipped item '%s'.",
    logItemTransfer = "Player '%s' moved item '%s' from inventory %s to %s.",
    logItemTransferFailed = "Player '%s' failed to move item '%s' from inventory %s to %s.",
    logItemCombine = "Player '%s' combined item '%s' with '%s'.",
    logItemFunction = "Player '%s' called item function '%s' on '%s'.",
    logItemAdded = "Item '%s' added to %s's inventory.",
    logItemCreated = "Item '%s' instance created.",
    logItemSpawned = "Item '%s' spawned in the world.",
    logItemDraggedOut = "Player '%s' dragged item '%s' out of an inventory.",
    logToolgunUse = "Player '%s' used toolgun: '%s'.",
    logPermissionDenied = "Player '%s' was denied permission to %s.",
    logSpawnDenied = "Player '%s' was denied from spawning %s '%s'.",
    logToolDenied = "Player '%s' was denied tool '%s'.",
    logObserveToggle = "Player '%s' toggled observe mode %s.",
    logPlayerConnecting = "Player '%s' is connecting from %s.",
    logPlayerConnected = "Player finished loading: '%s'.",
    logPlayerDisconnected = "Player disconnected: '%s'.",
    logFailedPassword = "[%s] %s failed server password (Server: '%s', Client: '%s')",
    logExploitAttempt = "Player '%s' [%s] triggered exploit net message '%s'.",
    logBackdoorDetectedFile = "Detected backdoor net '%s' defined in %s:%s.",
    logBackdoorDetected = "Detected backdoor net '%s' during initialization.",
    logSteamIDMissing = "SteamID missing for '%s' [%s] during CheckSeed.",
    logSteamIDMismatch = "SteamID mismatch for '%s': expected [%s] but got [%s].",
    logHackAttemptNet = "Client %s triggered hack detection via '%s'.",
    logHackAttempt = "Client %s triggered hack detection.",
    logVerifyCheatsOK = "Client %s responded to VerifyCheats.",
    logDoorSetClass = "%s set door class to %s on door %s.",
    logDoorRemoveClass = "%s removed door class from door %s.",
    logDoorRemoveClassSpecific = "%s removed class '%s' from door %s.",
    logDoorSaveData = "%s saved door data on door %s.",
    logDoorToggleOwnable = "%s set door %s to %s.",
    logDoorSetFaction = "%s set door faction to %s on door %s.",
    logDoorRemoveFaction = "%s removed door faction %s from door %s.",
    logDoorSetHidden = "%s set door %s to %s.",
    logDoorSetTitle = "%s set door title to '%s' on door %s.",
    logDoorResetData = "%s reset door data on door %s.",
    logDoorDisable = "%s disabled door %s.",
    logDoorEnable = "%s enabled door %s.",
    logDoorDisableAll = "%s disabled all doors (%s total).",
    logDoorEnableAll = "%s enabled all doors (%s total).",
    logDoorLock = "%s forcibly locked door %s.",
    logDoorUnlock = "%s forcibly unlocked door %s.",
    logDoorToggleLock = "%s toggled door %s to %s.",
    logDoorSell = "Player '%s' sold a door for %s.",
    logAdminDoorSell = "Admin '%s' sold a door for '%s' and refunded %s.",
    logDoorPurchase = "Player '%s' purchased a door for %s.",
    logDoorSetPrice = "%s set door price to %s on door %s.",
    logSpawnItem = "Player '%s' spawned an item: '%s' %s.",
    logCharGiveItem = "Player '%s' gave item '%s' to %s. Info: %s",
    logVendorAccess = "%s accessed vendor %s",
    logVendorExit = "%s exited vendor %s",
    logVendorSell = "%s sold a %s to %s",
    logVendorEdit = "%s edited vendor %s with key %s",
    logVendorBuyFailed = "%s tried to buy a %s from %s but it failed. They likely had no space!",
    logVendorBuy = "%s bought a %s from %s",
    logVendorRestock = "%s restocked vendor %s",
    logVendorsRestockAll = "%s restocked all vendors (%s total)",
    logVendorMoneyReset = "%s set vendor %s money to %s",
    logVendorMoneyResetAll = "%s reset all vendors money to %s (%s affected)",
    logVendorMoneyRestock = "%s restocked vendor %s money to %s",
    logVendorsSave = "%s saved all vendor data",
    logConfigChange = "Configuration changed: '%s' from '%s' to '%s'.",
    logWarningIssued = "Warning issued at %s by admin '%s' to player '%s' for: '%s'. Total warnings: %s (added #%s).",
    logWarningRemoved = "Warning removed at %s by admin '%s' for player '%s'. Reason: '%s'. Remaining warnings: %s (removed #%s).",
    logViewWarns = "Admin '%s' viewed warnings for player '%s'.",
    logViewWarnsIssued = "Admin '%s' viewed warnings issued by staff '%s'.",
    logAdminMode = "Admin Mode toggled at %s by '%s': %s. (ID: %s)",
    logCharSetModel = "Admin '%s' changed %s's model from %s to %s",
    logForceSay = "Admin '%s' forced %s to say: %s",
    logPlyTransfer = "Admin '%s' transferred '%s' from faction '%s' to '%s'.",
    logPlyWhitelist = "Admin '%s' whitelisted '%s' for faction '%s'.",
    logPlyUnwhitelist = "Admin '%s' removed '%s' from faction '%s' whitelist.",
    logBeClass = "Player '%s' joined class '%s'.",
    logSetClass = "Admin '%s' set '%s' to class '%s'.",
    logClassWhitelist = "Admin '%s' whitelisted '%s' for class '%s'.",
    logClassUnwhitelist = "Admin '%s' removed '%s' from class '%s' whitelist.",
    logFlagGive = "Admin '%s' gave flags '%s' to %s.",
    logFlagGiveAll = "Admin '%s' gave all flags to %s.",
    logFlagTake = "Admin '%s' took flags '%s' from %s.",
    logFlagTakeAll = "Admin '%s' removed all flags from %s.",
    logPlayerFlagGive = "Admin '%s' gave player flags '%s' to %s.",
    logPlayerFlagGiveAll = "Admin '%s' gave all player flags to %s.",
    logPlayerFlagTake = "Admin '%s' took player flags '%s' from %s.",
    logPlayerFlagTakeAll = "Admin '%s' removed all player flags from %s.",
    logVoiceToggle = "Admin '%s' toggled voice ban for %s: %s.",
    logCharBan = "Admin '%s' banned character '%s'.",
    logCharUnban = "Admin '%s' unbanned character '%s'.",
    logCharKick = "Admin '%s' kicked character '%s'.",
    logAttribSet = "Admin '%s' set %s's '%s' attribute to %s.",
    logAttribAdd = "Admin '%s' added %s to %s's '%s' attribute.",
    logAttribCheck = "Admin '%s' viewed attributes of %s.",
    logInvUpdateSize = "Admin '%s' reset %s's inventory size to %sx%s.",
    logInvSetSize = "Admin '%s' set %s's inventory size to %sx%s.",
    logStorageLock = "Admin '%s' %s storage %s.",
    logStorageUnlock = "Client %s unlocked storage %s.",
    logStorageUnlockFailed = "Client %s failed to unlock storage %s with password '%s'.",
    logSpawnAdd = "Admin '%s' added a spawn for faction '%s'.",
    logSpawnRemoveRadius = "Admin '%s' removed %s spawns within %s units.",
    logSpawnRemoveByName = "Admin '%s' removed %s spawns for faction '%s'.",
    logReturnItems = "Admin '%s' returned lost items to %s.",
    logBanOOC = "Admin '%s' banned %s (%s) from OOC chat.",
    logUnbanOOC = "Admin '%s' unbanned %s (%s) from OOC chat.",
    logBlockOOC = "Admin '%s' %s OOC chat globally.",
    logClearChat = "Admin '%s' cleared the chat.",
    logCheaterBanned = "Cheater '%s' (%s) was automatically banned.",
    logCheaterDetected = "Player '%s' (%s) was flagged for cheating.",
    logCheaterToggle = "Admin '%s' toggled cheater status for %s: %s.",
    logCheaterAction = "Cheater '%s' attempted to %s.",
    logAltKicked = "Alt account '%s' (%s) was kicked.",
    logAltBanned = "Alt account '%s' (%s) was banned due to blacklist.",
    logPlyKick = "Admin '%s' kicked player '%s'.",
    logPlyBan = "Admin '%s' banned player '%s'.",
    logPlyUnban = "Admin '%s' unbanned player '%s'.",
    logViewPlayerClaims = "Admin '%s' viewed claims for %s.",
    logViewAllClaims = "Admin '%s' viewed all ticket claims.",
    logViewPlayerTickets = "Admin '%s' viewed tickets for %s.",
    logTicketClaimed = "Admin '%s' claimed a ticket for %s. Total claims: %s.",
    logTicketClosed = "Admin '%s' closed a ticket for %s. Total claims: %s.",
    logPlyBring = "Admin '%s' brought player '%s'.",
    logPlyGoto = "Admin '%s' teleported to player '%s'.",
    logPlyReturn = "Admin '%s' returned player '%s' to their previous position.",
    logPlyJail = "Admin '%s' jailed player '%s'.",
    logPlyUnjail = "Admin '%s' unjailed player '%s'.",
    logPlyKill = "Admin '%s' killed player '%s'.",
    logPlySlay = "Admin '%s' slayed player '%s'.",
    logPlyRespawn = "Admin '%s' respawned player '%s'.",
    logPlyFreeze = "Admin '%s' froze player '%s' for %s seconds.",
    logPlyUnfreeze = "Admin '%s' unfroze player '%s'.",
    logPlyBlind = "Admin '%s' blinded player '%s' for %s seconds.",
    logPlyUnblind = "Admin '%s' unblinded player '%s'.",
    logPlyBlindFade = "Admin '%s' blind-faded player '%s' for %s seconds with color '%s'.",
    logBlindFadeAll = "All players blind-faded for %s seconds with color '%s'.",
    logPlyGag = "Admin '%s' gagged player '%s'.",
    logPlyUngag = "Admin '%s' ungagged player '%s'.",
    logPlyMute = "Admin '%s' muted player '%s'.",
    logPlyUnmute = "Admin '%s' unmuted player '%s'.",
    logPlyCloak = "Admin '%s' cloaked player '%s'.",
    logPlyUncloak = "Admin '%s' uncloaked player '%s'.",
    logPlyGod = "Admin '%s' enabled god mode for '%s'.",
    logPlyUngod = "Admin '%s' disabled god mode for '%s'.",
    logPlyIgnite = "Admin '%s' ignited player '%s' for %s seconds.",
    logPlyExtinguish = "Admin '%s' extinguished player '%s'.",
    logPlyStrip = "Admin '%s' stripped weapons from '%s'.",
    logCharBanOffline = "Admin '%s' banned offline character ID %s.",
    logCharWipe = "Admin '%s' wiped character '%s' (ID: %s) from the database.",
    logCharWipeOffline = "Admin '%s' wiped offline character '%s' (ID: %s) from the database.",
    logCharUnbanOffline = "Admin '%s' unbanned offline character ID %s.",
    am = "am",
    pm = "pm",
    console = "CONSOLE",
    banLogFormat = "[BAN] %s (%s) was banned for %s minute(s): %s",
    unbanLogFormat = "[UNBAN] %s was unbanned.",
    changeWeaponPropertyDesc = "Whether 'Change Weapon' property should list all weapons (even if they are not compatible with NPCs), or only those specifically marked as compatible with NPCs.",
    stripWeapon = "Strip Weapon",
    lock = "Lock",
    unlock = "Unlock",
    startForward = "Start Forward",
    startBackward = "Start Backward",
    stop = "Stop",
    resume = "Resume",
    breakAction = "Break",
    disintegrate = "Disintegrate",
    toggle = "Toggle",
    selfDestruct = "Self Destruct",
    depleteAmmo = "Deplete Ammo",
    restoreAmmo = "Restore Ammo",
    makeFriendly = "Make Friendly",
    makeHostile = "Make Hostile",
    recharge = "Recharge",
    jam = "Jam",
    equipMine = "Equip Mine",
    deployMine = "Deploy Mine",
    disableSpotlight = "Disable Spotlight",
    turnOff = "Turn Off",
    turnOn = "Turn On",
    enableTurret = "Enable Turret",
    disableTurret = "Disable Turret",
    dropBomb = "Drop Bomb",
    startNormalShooting = "Start Normal Shooting",
    startLongCycleShooting = "Start Long Cycle Shooting",
    enableDeadlyShooting = "Enable Deadly Shooting",
    disableDeadlyShooting = "Disable Deadly Shooting",
    enableOmniscient = "Enable Omniscient",
    disableOmniscient = "Disable Omniscient",
    enableBlindfire = "Enable Blindfire",
    disableBlindfire = "Disable Blindfire",
    holsterWeapon = "Holster Weapon",
    unholsterWeapon = "Unholster Weapon",
    holsterAndDestroyWeapon = "Holster And Destroy Weapon",
    burrow = "Burrow",
    freeTarget = "Free Target",
    suicide = "Suicide",
    sprint = "Sprint",
    enable = "Enable",
    startPlayingFetch = "Start Playing Fetch",
    stopPlayingFetch = "Stop Playing Fetch",
    enableBlindness = "Enable Blindness",
    disableBlindness = "Disable Blindness",
    permitWeaponUpgradePickup = "Permit Weapon Upgrade Pickup",
    restrictWeaponUpgradePickup = "Restrict Weapon Upgrade Pickup",
    startPanicking = "Start Panicking",
    stopPanicking = "Stop Panicking",
    makeAngry = "Make Angry",
    disarm = "Disarm",
    enableShooting = "Enable Shooting",
    disableShooting = "Disable Shooting",
    enableArmorRecharge = "Enable Armor Recharge",
    disableArmorRecharge = "Disable Armor Recharge",
    enableJump = "Enable Jump",
    disableJump = "Disable Jump",
    hearBugbait = "Hear Bugbait",
    ignoreBugbait = "Ignore Bugbait",
    squash = "Squash",
    enableAntlionSummon = "Enable Antlion Summon",
    disableAntlionSummon = "Disable Antlion Summon",
    forceStand = "Force Stand",
    forceCrouch = "Force Crouch",
    destroy = "Destroy",
    startPatrolling = "Start Patrolling",
    stopPatrolling = "Stop Patrolling",
    makeMoreAggressive = "Make More Aggressive",
    makeLessAggressive = "Make Less Aggressive",
    kickDriver = "Kick Driver",
    enableRadar = "Enable Radar",
    disableRadar = "Disable Radar",
    enterVehicle = "Enter Vehicle",
    mountGun = "Mount Gun",
    pop = "Pop",
    explode = "Explode",
    startEmitting = "Start Emitting",
    stopEmitting = "Stop Emitting",
    goUp = "Go Up",
    goDown = "Go Down",
    reverse = "Reverse",
    wear = "Wear",
    pickUp = "Pick up",
    promiseCannotResolveSelf = "cannot resolve to self",
    promiseUnhandledRejection = "Unhandled rejection: %s\n",
    promisesMustBeTableOfPromises = "promises must be a table of promises",
    argsMustBeTable = "args must be a table of values",
    mapCalledWithoutFunction = "map called without a function",
    promisesMustBeTable = "promises must be a table",
    folderMustBeFunction = "folder must be a function",
    countMustBeNonNegativeInteger = "count must be a non-negative integer",
    netTypeCannotEncode = "Type: %s can not be encoded. Encoded as pass-over value.",
    netDidNotFindType = "did not find type: %s",
    netstreamError = "NetStream: '%s'\n%s\n",
    utf8CharbytesStringExpected = "bad argument #1 to 'utf8charbytes' (string expected, got %s)",
    utf8CharbytesNumberExpected = "bad argument #2 to 'utf8charbytes' (number expected, got %s)",
    utf8StringTerminatedEarly = "UTF-8 string terminated early",
    utf8InvalidCharacter = "Invalid UTF-8 character",
    utf8LenStringExpected = "bad argument #1 to 'utf8len' (string expected, got %s)",
    utf8SubStringExpected = "bad argument #1 to 'utf8sub' (string expected, got %s)",
    utf8SubNumber1Expected = "bad argument #2 to 'utf8sub' (number expected, got %s)",
    utf8SubNumber2Expected = "bad argument #3 to 'utf8sub' (number expected, got %s)",
    utf8ReplaceStringExpected = "bad argument #1 to 'utf8replace' (string expected, got %s)",
    utf8ReplaceTableExpected = "bad argument #2 to 'utf8replace' (table expected, got %s)",
    utf8ReverseStringExpected = "bad argument #1 to 'utf8reverse' (string expected, got %s)",
    sfsUnsupportedType = "Unsupported type: %s",
    sfsArrayNegativeSize = "Array size cannot be negative: %s",
    sfsArrayTooLarge = "Array size too large to encode: %s",
    sfsTableTooLarge = "Table size too large to encode: %s",
    sfsStringTooLarge = "String too large to encode: %s",
    sfsNumberTooLarge = "Number too large to encode: %s",
    sfsExponentOutOfRange = "Exponent out of range: %s",
    sfsReadBeyondBuffer = "Attempted to read beyond buffer size",
    sfsMaxDecodeSizeExceeded = "Max decode size exceeded",
    sfsBufferEmpty = "Buffer is empty",
    sfsMaxSizeNotNumber = "max_size is not a number",
    sfsMaxSizeInvalid = "max_size can either be a positive number or math.huge for unlimited",
    sfsNoMoreCustomEncoders = "No more free slots for custom encoders",
    defaultCharName = "John Doe",
    attribTooHigh = "%s too high",
    noDefaultInventory = "No default inventory available",
    classUniqueIDString = "uniqueID must be a string",
    classDataTable = "data must be a table",
    dataMustBeTable = "data must be a table",
    configKeyString = "Expected config key to be string, got %s",
    configDataTable = "Expected config data to be a table, got %s",
    configMissingType = "Config '%s' is missing a valid type, inferring %s",
    configNeedsMinMax = "Config '%s' of type %s is missing %s",
    itemUniqueIDString = "uniqueID must be a string",
    itemBaseNotFound = "Item %s has a non-existent base %s",
    itemNonNumberID = "non-number ID given to lia.item.new",
    gridInvNotFound = "GridInv not found",
    itemKeyString = "key must be a string",
    invTypeMismatch = "expected type of %s to be %s for inventory type %s, got %s",
    factionUniqueIDString = "uniqueID must be a string",
    factionDataTable = "data must be a table",
    factionIndexInUse = "faction index is already in use",
    optionKeyString = "Expected option key to be a string, got %s",
    optionNameString = "Expected option name to be a string, got %s",
    optionDataTable = "Expected option data to be a table, got %s",
    font = "Font",
    fontDesc = "Font Description",
    genericFont = "Generic Font",
    genericFontDesc = "Generic Font Description",
    viewCharacterList = "View Character List",
    privilegesExportedBy = "Privileges exported by %s to: %s",
    privilegesExportedSuccessfully = "Privileges exported successfully to: %s",
    privilegesExportFailed = "Failed to export privileges. Check console for details.",
    exportprivilegesDesc = "Export all current privileges to a data file",
    privileges = "Privileges",
    refresh = "Refresh",
    adminStickCategoryModeration = "Moderation",
    adminStickCategoryCharacterManagement = "Character Management",
    adminStickCategoryFlagManagement = "Flag Management",
    adminStickCategoryDoorManagement = "Door Management",
    adminStickCategoryPlayerInformation = "Player Information",
    adminStickCategoryTeleportation = "Teleportation",
    adminStickCategoryUtility = "Utility",
    adminStickCategoryAdministration = "Administration",
    adminStickSubCategoryModerationTools = "Moderation Tools",
    adminStickSubCategoryAttributes = "Attributes",
    adminStickSubCategoryFactions = "Factions",
    adminStickSubCategoryClasses = "Classes",
    adminStickSubCategoryWhitelists = "Whitelists",
    adminStickSubCategoryCharacterFlags = "Character Flags",
    adminStickSubCategoryPlayerFlags = "Player Flags",
    adminStickSubCategoryDoorActions = "Door Actions",
    adminStickSubCategoryDoorSettings = "Door Settings",
    adminStickSubCategoryDoorMaintenance = "Door Maintenance",
    adminStickSubCategoryDoorInformation = "Door Information",
    adminStickSubCategoryCommands = "Commands",
    adminStickNoOptions = "No admin stick options available for this target",
    adminStickCopiedToClipboard = "Copied %s to clipboard",
    adminStickCopiedCharID = "Copied character ID to clipboard",
    configReset = "All configuration values have been reset to defaults.",
    logMissingPrivilege = "%s requested missing privilege '%s' (Player: %s, Group: %s)",
    logMissingPrivilegeNoClient = "Missing privilege '%s' requested (Player: %s, Group: %s)",
    staffFactionRestricted = "You cannot change to the staff faction through this method. Staff characters must be created through the menu system.",
    logError = "Error",
    logWarning = "Warning",
    logDeprecated = "Deprecated",
    logUpdater = "Updater",
    logInformation = "Information",
    logAdmin = "Admin",
    logBootstrap = "Bootstrap",
    logCategory = "Category",
    deprecatedMessage = "Method '%s' is deprecated and will be removed in a future version.",
    maybeYouShouldntHaveCheated = "Maybe you shouldn't have cheated",
    entityTooFar = "The entity is too far away to convert.",
    cannotConvertEntity = "You cannot convert this entity.",
    entityNotConvertible = "This entity type cannot be converted to an item.",
    entityConverted = "Successfully converted entity to item: %s",
    entityConvertedGround = "Entity converted and spawned on ground: %s",
    inventoryError = "An error occurred while adding the item to your inventory.",
    convertedEntityDesc = "A converted %s entity",
    convertedEntities = "Converted Entities",
}